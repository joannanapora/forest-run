[{"/Users/porczi/forest/reactapp-teamfinder/src/index.tsx":"1","/Users/porczi/forest/reactapp-teamfinder/src/reportWebVitals.ts":"2","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/store.ts":"3","/Users/porczi/forest/reactapp-teamfinder/src/App.tsx":"4","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/root-reducer.ts":"5","/Users/porczi/forest/reactapp-teamfinder/src/App.styles.ts":"6","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.reducer.ts":"7","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.reducer.ts":"8","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.styles.ts":"9","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.selectors.ts":"10","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.selectors.ts":"11","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.component.tsx":"12","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.component.tsx":"13","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx":"14","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.component.tsx":"15","/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.component.tsx":"16","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.component.tsx":"17","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.component.tsx":"18","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.component.tsx":"19","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.component.tsx":"20","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.types.ts":"21","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.styles.ts":"22","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.styles.ts":"23","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts":"24","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.styles.ts":"25","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.styles.ts":"26","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.styles.tsx":"27","/Users/porczi/forest/reactapp-teamfinder/src/stripe/stripe.component.tsx":"28","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.component.tsx":"29","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.component.tsx":"30","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/uploud-event-image-step.component.tsx":"31","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.component.tsx":"32","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.component.tsx":"33","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.actions.ts":"34","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.styles.ts":"35","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.styles.ts":"36","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.styles.ts":"37","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/upload-event-image-step.styles.ts":"38","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.styles.ts":"39","/Users/porczi/forest/reactapp-teamfinder/src/shared/password-validation.ts":"40","/Users/porczi/forest/reactapp-teamfinder/src/shared/email-validation.ts":"41","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/index.ts":"42","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.graphql.ts":"43","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.styles.ts":"44","/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.styles.ts":"45","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.styles.tsx":"46","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.component.tsx":"47","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.styles.ts":"48","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.query.tsx":"49","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.mutation.ts":"50","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/index.ts":"51","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.component.tsx":"52","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.styles.ts":"53","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner-button.component.tsx":"54","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.container.tsx":"55","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.container.tsx":"56","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.styles.ts":"57","/Users/porczi/forest/reactapp-teamfinder/src/autocomplete.tsx":"58"},{"size":1277,"mtime":1612350575753,"results":"59","hashOfConfig":"60"},{"size":425,"mtime":1612188791632,"results":"61","hashOfConfig":"60"},{"size":307,"mtime":1612188791637,"results":"62","hashOfConfig":"60"},{"size":300,"mtime":1612350446295,"results":"63","hashOfConfig":"60"},{"size":461,"mtime":1612188791636,"results":"64","hashOfConfig":"60"},{"size":164,"mtime":1612188791510,"results":"65","hashOfConfig":"60"},{"size":527,"mtime":1612267861851,"results":"66","hashOfConfig":"60"},{"size":965,"mtime":1612267867959,"results":"67","hashOfConfig":"60"},{"size":2473,"mtime":1612293416062,"results":"68","hashOfConfig":"60"},{"size":224,"mtime":1612267846896,"results":"69","hashOfConfig":"60"},{"size":268,"mtime":1612267437361,"results":"70","hashOfConfig":"60"},{"size":3097,"mtime":1612269422416,"results":"71","hashOfConfig":"60"},{"size":7144,"mtime":1612351267403,"results":"72","hashOfConfig":"60"},{"size":953,"mtime":1612188791625,"results":"73","hashOfConfig":"60"},{"size":7825,"mtime":1612350512606,"results":"74","hashOfConfig":"60"},{"size":4122,"mtime":1612354830405,"results":"75","hashOfConfig":"60"},{"size":4391,"mtime":1612350964855,"results":"76","hashOfConfig":"60"},{"size":6964,"mtime":1612351175028,"results":"77","hashOfConfig":"60"},{"size":8671,"mtime":1612348585805,"results":"78","hashOfConfig":"60"},{"size":5675,"mtime":1612222882167,"results":"79","hashOfConfig":"60"},{"size":76,"mtime":1612188791639,"results":"80","hashOfConfig":"60"},{"size":1115,"mtime":1612188791616,"results":"81","hashOfConfig":"60"},{"size":1511,"mtime":1612188791620,"results":"82","hashOfConfig":"60"},{"size":893,"mtime":1612188791625,"results":"83","hashOfConfig":"60"},{"size":2022,"mtime":1612188791631,"results":"84","hashOfConfig":"60"},{"size":2536,"mtime":1612188791630,"results":"85","hashOfConfig":"60"},{"size":810,"mtime":1612188791619,"results":"86","hashOfConfig":"60"},{"size":772,"mtime":1612188791640,"results":"87","hashOfConfig":"60"},{"size":5179,"mtime":1612352114870,"results":"88","hashOfConfig":"60"},{"size":1704,"mtime":1612194315253,"results":"89","hashOfConfig":"60"},{"size":1286,"mtime":1612188791622,"results":"90","hashOfConfig":"60"},{"size":7324,"mtime":1612350498114,"results":"91","hashOfConfig":"60"},{"size":11993,"mtime":1612290041352,"results":"92","hashOfConfig":"60"},{"size":180,"mtime":1612188791638,"results":"93","hashOfConfig":"60"},{"size":419,"mtime":1612188791627,"results":"94","hashOfConfig":"60"},{"size":684,"mtime":1612188791626,"results":"95","hashOfConfig":"60"},{"size":518,"mtime":1612188791623,"results":"96","hashOfConfig":"60"},{"size":627,"mtime":1612188791622,"results":"97","hashOfConfig":"60"},{"size":818,"mtime":1612188791621,"results":"98","hashOfConfig":"60"},{"size":197,"mtime":1612188791634,"results":"99","hashOfConfig":"60"},{"size":280,"mtime":1612188791633,"results":"100","hashOfConfig":"60"},{"size":74,"mtime":1612199553660,"results":"101","hashOfConfig":"60"},{"size":587,"mtime":1612191099930,"results":"102","hashOfConfig":"60"},{"size":1837,"mtime":1612277392523,"results":"103","hashOfConfig":"60"},{"size":222,"mtime":1612189945108,"results":"104","hashOfConfig":"60"},{"size":905,"mtime":1612188791618,"results":"105","hashOfConfig":"60"},{"size":2291,"mtime":1612188791631,"results":"106","hashOfConfig":"60"},{"size":531,"mtime":1612188791632,"results":"107","hashOfConfig":"60"},{"size":271,"mtime":1612220836140,"results":"108","hashOfConfig":"60"},{"size":357,"mtime":1612266303636,"results":"109","hashOfConfig":"60"},{"size":108,"mtime":1612267844999,"results":"110","hashOfConfig":"60"},{"size":348,"mtime":1612188791634,"results":"111","hashOfConfig":"60"},{"size":312,"mtime":1612188791635,"results":"112","hashOfConfig":"60"},{"size":1652,"mtime":1612290221343,"results":"113","hashOfConfig":"60"},{"size":6638,"mtime":1612350544589,"results":"114","hashOfConfig":"60"},{"size":3478,"mtime":1612350446304,"results":"115","hashOfConfig":"60"},{"size":707,"mtime":1612350414188,"results":"116","hashOfConfig":"60"},{"size":2726,"mtime":1612360779985,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"i99r7u",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/porczi/forest/reactapp-teamfinder/src/index.tsx",[],["244","245"],"/Users/porczi/forest/reactapp-teamfinder/src/reportWebVitals.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/store.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/App.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/root-reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/App.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.selectors.ts",["246"],"import { createSelector } from 'reselect';\nimport { IUser } from './user.reducer';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n    [selectUser],\n    (user) => user.currentUser);","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.selectors.ts",["247","248"],"import { NavigationTwoTone } from '@material-ui/icons';\nimport { createSelector } from 'reselect';\nimport { DEFAULT_MAX_VERSION } from 'tls';\n\nconst selectNav = state => state.nav;\n\nexport const selectNavTabs = createSelector(\n    [selectNav],\n    nav => nav.navTabs\n)","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.component.tsx",["249","250","251","252"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.component.tsx",["253","254"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport UpcomingEvent from '../event-card/event.component';\nimport { useEventListStyles } from './event-list.styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Button } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\n\nconst events = [\n    {\n        id: 0,\n        date: '12 March 2021, 7;00 pm',\n        title: 'Hyde Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.parkgrandhydepark.co.uk/blog/wp-content/uploads/2017/08/Diana-Princess-of-Wales-Memorial-Fountain-Hyde-Park-London.jpg',\n        distance: 2,\n    },\n    {\n        id: 1,\n        date: '16 February 2021, 7;00 am',\n        title: 'Princess Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.towerhamlets.gov.uk/images_and_video/Leisure-and-culture/Parks-and-open-spaces/Mile_End_Park.png',\n        distance: 4,\n    },\n    {\n        id: 2,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.womensrunning.com/wp-content/uploads/sites/2/2016/09/nicest-people.jpg?resize=630%2C420',\n        distance: 10,\n    },\n    {\n        id: 3,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.twincities.com/wp-content/uploads/2019/06/jmp-mile-003.jpg',\n        distance: 4,\n    },\n    {\n        id: 4,\n        date: '16 February 2021, 7;00 am',\n        title: 'Princess Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.towerhamlets.gov.uk/images_and_video/Leisure-and-culture/Parks-and-open-spaces/Mile_End_Park.png',\n        distance: 14,\n    },\n    {\n        id: 5,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://news.sanfordhealth.org/wp-content/uploads/2018/03/group-run.jpg',\n        distance: 0.5,\n    },\n    {\n        id: 6,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://i.pinimg.com/564x/42/cc/62/42cc624233f1d0a1e3607bcc6bb52fca.jpg',\n        distance: 8,\n    },\n    {\n        id: 7,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://news.sanfordhealth.org/wp-content/uploads/2018/03/group-run.jpg',\n        distance: 4,\n    },\n    {\n        id: 8,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://i.pinimg.com/564x/42/cc/62/42cc624233f1d0a1e3607bcc6bb52fca.jpg',\n        distance: 6,\n    },\n]\n\ninterface IAlerts {\n    somethingWentWrong: boolean\n    missedInputs: boolean\n}\n\n\nconst EventList = () => {\n\n    const [checked, setChecked]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [alert, setAlert]: [IAlerts, Dispatch<SetStateAction<IAlerts>>] = useState({\n        somethingWentWrong: false,\n        missedInputs: false,\n    })\n\n    const handleChange = () => {\n        setChecked((prev) => !prev);\n    };\n\n    const handleSort = () => {\n\n    }\n    const classes = useEventListStyles();\n\n    return (\n        <div className={classes.eventListPage}>\n            <div className={classes.rootfilters}>\n                <FormControlLabel\n                    control={<Switch color=\"primary\"\n                        checked={checked} onChange={handleChange} />}\n                    label={checked ? '' : 'filters'}\n                />\n                <div className={classes.container}>\n                    <Fade in={checked}>\n                        <Paper elevation={4} className={classes.paper}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleSort}\n                            >\n                                Date\n      </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleSort}\n                            >\n                                Distance\n      </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleSort}\n                            >\n                                Popular\n      </Button>\n                        </Paper>\n                    </Fade>\n                </div>\n            </div>\n            <Grid item xs={12}>\n                <Grid container justify=\"space-evenly\" spacing={2}>\n                    {\n                        events.map((event) => {\n                            return (<Grid key={event.id} item>\n                                <UpcomingEvent title={event.title} distance={event.distance} image={event.image} description={event.description} date={event.date} />\n                            </Grid>\n                            )\n                        })\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default EventList;\n","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.component.tsx",["255","256","257","258"],"\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport React, { useState, useEffect, FunctionComponent } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useCreatePostStyles } from './create-post.styles';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Alert from '@material-ui/lab/Alert';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport { CREATE_POST } from '../../../grapQL/post/post.mutation';\nimport { useMutation } from '@apollo/react-hooks';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { StaticContext } from 'react-router';\n\ninterface ChipData {\n    key: number;\n    label: string;\n}\n\nfunction CreateNewPost({ history }) {\n    const [chip, setChip]: [string, any] = useState('');\n\n    const [alert, setAlert] = useState({\n        emptyText: false,\n        emptyTitle: false,\n        tooLessKeywords: false,\n        somethingWentWrong: false,\n    });\n\n    const [postValues, setPostValues] = useState({\n        title: '',\n        text: '',\n        keywords: [],\n        image: File,\n    });\n\n    const [createPost, { loading, error }] = useMutation(\n        CREATE_POST\n    );\n\n    useEffect(() => {\n    }, [postValues.keywords]);\n\n\n    const handleChipDelete = (chipToDelete: ChipData) => () => {\n        const newKeywords = postValues.keywords.filter((keyword) => {\n            return keyword.key !== chipToDelete.key;\n        });\n        setPostValues({ ...postValues, keywords: newKeywords });\n    };\n\n    const classes = useCreatePostStyles();\n\n    const handleTextChange = (value) => {\n        setPostValues({ ...postValues, text: value });\n    };\n\n    const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAlert({\n            ...alert,\n            emptyText: false,\n            emptyTitle: false,\n            tooLessKeywords: false\n        });\n        setPostValues({ ...postValues, title: event.target.value });\n    };\n\n    const onChipKeydown = (event) => {\n        if (chip.length < 3) {\n            return;\n        }\n        if (event.key === 'Enter' || event.key === 'Tab' || event.key === ',') {\n            const nextKey = postValues.keywords.length > 0 ?\n                postValues.keywords[postValues.keywords.length - 1].key + 1\n                : 1;\n\n            const newKeywordsList = [...postValues.keywords, { label: event.target.value, key: nextKey }];\n            setPostValues({ ...postValues, keywords: newKeywordsList });\n\n            setChip('');\n        }\n    };\n\n    const handleChipChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.target.value[event.target.value.length - 1] === ' ' || event.target.value[0] === ',' ?\n            setChip(event.target.value.slice(0, -1)) :\n            setChip(event.target.value);\n    };\n\n\n    const redirectToArticles = () => {\n        if (history) {\n            history.push('/notice-board');\n        }\n    };\n\n\n    const handlePublishButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (postValues.title.length < 1) {\n            setAlert({\n                ...alert,\n                emptyTitle: true\n            });\n        };\n        if (postValues.text.length < 1) {\n            setAlert({\n                ...alert,\n                emptyText: true\n            });\n        };\n        if (postValues.keywords.length < 3) {\n            setAlert({\n                ...alert,\n                tooLessKeywords: true\n            });\n        };\n        createPost(\n            {\n                variables: {\n                    title: postValues.title,\n                    text: postValues.text,\n                    keywords: postValues.keywords.map((keyword) => {\n                        return keyword.label;\n                    })\n                }\n            }\n        );\n        redirectToArticles();\n    };\n\n    if (error) {\n        setAlert({ ...alert, somethingWentWrong: true })\n    };\n\n\n    if (loading) {\n        return (\n            <div className={classes.container}>\n                <Button\n                    disabled\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"medium\"\n                    className={classes.buttonBack}\n                    startIcon={<ArrowBackIcon />}\n                    onClick={redirectToArticles}\n                >\n                    Back\n                </Button>\n                <ReactQuill className={classes.quill} value={postValues.text}\n                    onChange={handleTextChange} />\n                <div className={classes.postDetails}>\n                    <TextField\n                        disabled\n                        className={classes.postTextFields}\n                        value={postValues.title}\n                        id=\"standard-textarea\"\n                        label=\"Title\"\n                        onChange={handleTitle} />\n                    <TextField\n                        disabled\n                        className={classes.postTextFields}\n                        value={chip}\n                        id=\"keywords\"\n                        label=\"Keywords\"\n                        onKeyDown={onChipKeydown}\n                        onChange={handleChipChange} />\n                </div>\n                <Paper component=\"ul\" className={classes.chipRoot}>\n                </Paper>\n                <SpinnerButton startIcon={<PublishIcon />} loading={loading} buttonLabel={'Publish'} onClick={handlePublishButton} />\n            </div>\n        );\n    }\n\n    if (!loading) {\n        return (\n            <div className={classes.container}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"medium\"\n                    className={classes.buttonBack}\n                    startIcon={<ArrowBackIcon />}\n                    onClick={redirectToArticles}\n                >\n                    ack\n                </Button>\n                {alert.somethingWentWrong ? (\n                    <Alert severity=\"error\">Ooops! Something went wrong, try again later.</Alert>\n                ) : null}\n                {alert.emptyText ? (\n                    <Alert severity=\"error\">Text field is empty</Alert>\n                ) : null}\n                {alert.emptyTitle ? (\n                    <Alert severity=\"error\">Title field is empty</Alert>\n                ) : null}\n                {alert.tooLessKeywords ? (\n                    <Alert severity=\"error\">Too less keywords</Alert>\n                ) : null}\n                <ReactQuill className={classes.quill} value={postValues.text}\n                    onChange={handleTextChange} />\n                <div className={classes.postDetails}>\n                    <TextField\n                        className={classes.postTextFields}\n                        value={postValues.title}\n                        id=\"standard-textarea\"\n                        label=\"Title\"\n                        onChange={handleTitle} />\n                    <TextField\n                        className={classes.postTextFields}\n                        value={chip}\n                        id=\"keywords\"\n                        label=\"Keywords\"\n                        onKeyDown={onChipKeydown}\n                        onChange={handleChipChange} />\n                </div>\n                <Paper component=\"ul\" className={classes.chipRoot}>\n                    {postValues.keywords.map((data) => {\n                        let icon;\n\n                        if (data.label === 'Enter 3-10 keywords') {\n                            icon = <TagFacesIcon />;\n                        }\n\n                        return (\n                            <li key={data.key}>\n                                <Chip\n                                    icon={icon}\n                                    label={data.label}\n                                    onDelete={data.label === 'Enter 3-10 keywords' ? undefined : handleChipDelete(data)}\n                                    className={classes.chip} />\n                            </li>\n                        );\n                    })}\n                </Paper>\n                <SpinnerButton startIcon={<PublishIcon />} loading={loading} buttonLabel={'Publish'} onClick={handlePublishButton} />\n            </div>\n        );\n    };\n\n    return (\n        <></>\n    );\n}\n\nexport default withRouter(CreateNewPost);","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.types.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.styles.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/stripe/stripe.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/uploud-event-image-step.component.tsx",["259","260"],"import React from 'react';\nimport { Button, FormControl } from '@material-ui/core';\nimport { useUploadStyles } from './upload-event-image-step.styles';\n\nconst AvatarUploadStep = () => {\n    const classes = useUploadStyles();\n    const [selectedFile, setFile] = React.useState('');\n    const [image, saveImage] = React.useState(false);\n\n    const onImageUpload = ({ target }: any) => {\n        setFile(target.files[0])\n    };\n\n    const handleSubmit = () => {\n        saveImage(true);\n    };\n\n\n    return (\n        <div className={classes.upload}>\n            { selectedFile ?\n                <FormControl className={classes.formControl}>\n                    <img className={classes.image} alt='Success!' src={selectedFile} />\n                </FormControl>\n                :\n                <FormControl className={classes.formControl}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >Upload File\n                    <input\n                            hidden\n                            type=\"file\"\n                            onChange={onImageUpload}\n                        />\n                    </Button>\n                </FormControl>}\n        </div>\n    );\n\n}\n\nexport default AvatarUploadStep;","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.component.tsx",["261"],"import React, { useState } from 'react';\n\nimport { Button, FilledInput, FormControl, IconButton, InputAdornment, InputLabel, TextField } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { useSignInStyles } from './sign-in.styles';\nimport { LOGIN_USER } from '../../../grapQL';\nimport { useMutation } from '@apollo/react-hooks';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../../../store-redux';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\n\n\ninterface DetailsForm {\n    email: string;\n    password: string;\n    showPassword: boolean;\n}\n\ninterface ErrorAlerts {\n    wrongEmailPassword: boolean;\n    internalBackendError: boolean;\n}\n\nconst SignIn = ({ dispatchSetCurrentUser, history }) => {\n    const classes = useSignInStyles();\n    const [values, setValues] = useState<DetailsForm>({\n        email: '',\n        password: '',\n        showPassword: false,\n    });\n\n    const [errors, setErrors] = useState<ErrorAlerts>({\n        wrongEmailPassword: false,\n        internalBackendError: false,\n    });\n\n    const [loginUser, { loading }] = useMutation(\n        LOGIN_USER, {\n        update(_, result) {\n            history.push('/upcoming-events');\n            const Token = result.data.login.accessToken;\n            localStorage.setItem('token', Token);\n            dispatchSetCurrentUser({\n                username: result.data.login.username\n            });\n        },\n        onError(e) {\n            if ((e.graphQLErrors[0].message as any).statusCode === 500) {\n                setErrors({ ...errors, internalBackendError: true });\n            }\n            if ((e.graphQLErrors[0].message as any).statusCode === 401) {\n                setErrors({ ...errors, wrongEmailPassword: true });\n            }\n        },\n        variables: {\n            email: values.email,\n            password: values.password\n        }\n    }\n    )\n    const handleChange = (prop: keyof DetailsForm) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setErrors({\n            wrongEmailPassword: false,\n            internalBackendError: false,\n        });\n    };\n\n    const handleClickShowPassword = (prop: keyof DetailsForm) => (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n    const handleSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n        loginUser();\n    };\n\n    const submitOnEnter = (event: React.KeyboardEvent<any>) => {\n        if (event.key === \"Enter\") {\n            loginUser();\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className={classes.form}>\n                <TextField value={values.email}\n                    disabled\n                    onKeyDown={submitOnEnter}\n                    onChange={handleChange('email')}\n                    className={classes.textfield}\n                    name='email'\n                    label=\"email\"\n                    variant=\"filled\" />\n                <FormControl className={classes.textfield} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        disabled\n                        onKeyDown={submitOnEnter}\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                {\n                    errors.internalBackendError ? (\n                        <Alert severity=\"error\">Something went wrong Try again later</Alert>\n                    ) : null\n                }\n                {\n                    errors.wrongEmailPassword ? (\n                        <Alert severity=\"error\">Email or Password is wrong</Alert>\n                    ) : null\n                }\n                <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n            </div>\n        )\n    }\n    if (!loading)\n        return (<div className={classes.form}>\n            <TextField value={values.email}\n                onKeyDown={submitOnEnter}\n                onChange={handleChange('email')}\n                className={classes.textfield}\n                name='email'\n                label=\"email\"\n                variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                    onKeyDown={submitOnEnter}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={() => handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n            </FormControl>\n            {\n                errors.internalBackendError ? (\n                    <Alert severity=\"error\">Something went wrong Try again later</Alert>\n                ) : null\n            }\n            {\n                errors.wrongEmailPassword ? (\n                    <Alert severity=\"error\">Email or Password is wrong</Alert>\n                ) : null\n            }\n            <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n\n        </div>);\n\n    return (\n        <></>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSetCurrentUser: (user) => dispatch(setCurrentUser(user))\n});\n\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps)\n    (SignIn));","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.component.tsx",["262","263"],"import React, { useState } from 'react';\nimport { Button, FilledInput, FormControl, IconButton, InputAdornment, InputLabel, TextField } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { withRouter } from \"react-router-dom\";\nimport { validateEmail } from '../../../shared/email-validation';\nimport { validatePassword } from '../../../shared/password-validation';\nimport Alert from '@material-ui/lab/Alert';\nimport { useSignUpStyles } from './sign-up.styles';\nimport {REGISTER_USER} from '../../../grapQL';\nimport {useMutation} from '@apollo/react-hooks';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\n\n\ninterface DetailsForm {\n    email: string;\n    password: string;\n    confirmPassword: string;\n    showPassword: boolean;\n    username: string;\n}\n\ninterface ErrorAlerts {\n    wrongEmail: boolean;\n    wrongPassword: boolean;\n    passwordsDontMatch: boolean;\n    usernameExists: boolean;\n    emailExists: boolean;\n    usernameTooShort: boolean;\n    usernameTooLong: boolean;\n    userRegistered: boolean;\n}\n\n\nconst SignUp = () => {\n    const classes = useSignUpStyles();\n    const [values, setValues] = React.useState<DetailsForm>({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        showPassword: false,\n        username: '',\n    });\n\n    const [notifications, setNotification] = React.useState<ErrorAlerts>({\n        wrongEmail: false,\n        wrongPassword: false,\n        passwordsDontMatch: false,\n        usernameTooLong:false,\n        usernameTooShort:false,\n        usernameExists: false,\n        emailExists: false,\n        userRegistered: false,\n    });\n\n\n    const [addUser, {loading}] = useMutation(\n        REGISTER_USER, {\n            update(_, result){\n                setNotification({...notifications, userRegistered: true});\n                clearAllInputs();\n            },\n            onError(e) {\n                if ((e.graphQLErrors[0].message as any).statusCode === 409) {\n                    setNotification({...notifications, usernameExists: true});\n                }\n                        },\n            variables: {\n                username: values.username,\n                email: values.email,\n                password: values.password\n            }\n        }\n    );\n\n    const clearAllInputs = () => {\n        setValues({\n            email: '',\n            password: '',\n            confirmPassword: '',\n            showPassword: false,\n            username: '',\n        })\n    }\n\n    const validateAndLogin = () => {\n        if (!validateEmail(values.email)) {\n            setNotification({ ...notifications, wrongEmail: true });\n            return;\n        }\n        if (values.username.length < 3) {\n            setNotification({ ...notifications, usernameTooShort: true });\n            return;\n        }\n        if (values.username.length > 18) {\n            setNotification({ ...notifications, usernameTooLong: true });\n            return;\n        }\n\n        if (!validatePassword(values.password)) {\n            setNotification({ ...notifications, wrongPassword: true });\n            return;\n        }\n\n        if (values.password !== values.confirmPassword) {\n            setNotification({ ...notifications, passwordsDontMatch: true });\n            return\n        } \n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        validateAndLogin();\n            \n        addUser();\n\n    }\n\n\n\n\n    const handleChange = (prop: keyof DetailsForm) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setNotification({\n        wrongEmail: false,\n        wrongPassword: false,\n        passwordsDontMatch: false,\n        usernameTooLong:false,\n        usernameTooShort:false,\n        usernameExists: false,\n        emailExists: false,\n        userRegistered: false})\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n\n    const submitOnEnter = (event: React.KeyboardEvent<any>) => {\n        if (event.key === \"Enter\") {\n\n            event.preventDefault();\n\n            validateAndLogin();\n                \n            addUser();\n        }\n    };\n\n    if (loading) {\n        return (\n        <div className={classes.form}>\n            {\n                notifications.wrongEmail ? (\n                   <Alert severity=\"error\">Wrong email</Alert>\n                ) : null\n            }\n            <TextField disabled onChange={handleChange('email')}\n                className={classes.textfield} name='email' label=\"Email\"   value={values.email} variant=\"filled\" />\n               {\n                    notifications.usernameTooShort ? (\n              <Alert severity=\"error\">Username's too short (3-18 char.)</Alert>\n                    ) : null\n                }\n                {\n                    notifications.usernameExists ? (\n              <Alert severity=\"error\">User with that email/username already exists</Alert>\n                    ) : null\n                    }\n                {\n                    notifications.usernameTooLong ? (\n                        <Alert severity=\"error\">Username's too long (3-18 char.)</Alert>\n                    ) : null\n                }\n            <TextField disabled onChange={handleChange('username')}\n            value={values.username}\n                className={classes.textfield} name='username' label=\"Username\" variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                disabled\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n                {\n                    notifications.wrongPassword ? (\n                        <Alert severity=\"error\">Password is too weak</Alert>\n                    ) : null\n                }\n            </FormControl>\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Confirm Password</InputLabel>\n                <FilledInput\n                disabled\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.confirmPassword}\n                    onChange={handleChange('confirmPassword')}\n                    endAdornment={\n                        <InputAdornment position=\"end\" />\n                    }\n                />\n            </FormControl>\n            {\n                notifications.passwordsDontMatch ? (\n                    <Alert severity=\"error\">Passwords don't match</Alert>\n                ) : null\n            }\n            {\n                    notifications.userRegistered ? (\n              <Alert severity=\"success\">Account has been created! You can login now.</Alert>\n                    ) : null\n                }\n             <SpinnerButton className={classes.loginButton} disabled={loading} loading={loading} buttonLabel={'Register'} onClick={handleSubmit} />\n        </div>\n        )\n    }\n    if (!loading) {\n        return (\n            <div className={classes.form}>\n            {\n                notifications.wrongEmail ? (\n                   <Alert severity=\"error\">Wrong email</Alert>\n                ) : null\n            }\n            <TextField onKeyDown={submitOnEnter} onChange={handleChange('email')}\n                className={classes.textfield} name='email' label=\"Email\"   value={values.email} variant=\"filled\" />\n               {\n                    notifications.usernameTooShort ? (\n              <Alert severity=\"error\">Username's too short (3-18 char.)</Alert>\n                    ) : null\n                }\n                {\n                    notifications.usernameExists ? (\n              <Alert severity=\"error\">User with that email/username already exists</Alert>\n                    ) : null\n                    }\n                {\n                    notifications.usernameTooLong ? (\n                        <Alert severity=\"error\">Username's too long (3-18 char.)</Alert>\n                    ) : null\n                }\n            <TextField onKeyDown={submitOnEnter} onChange={handleChange('username')}\n            value={values.username}\n                className={classes.textfield} name='username' label=\"Username\" variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                onKeyDown={submitOnEnter}\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n                {\n                    notifications.wrongPassword ? (\n                        <Alert severity=\"error\">Password is too weak</Alert>\n                    ) : null\n                }\n            </FormControl>\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Confirm Password</InputLabel>\n                <FilledInput\n                onKeyDown={submitOnEnter}\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.confirmPassword}\n                    onChange={handleChange('confirmPassword')}\n                    endAdornment={\n                        <InputAdornment position=\"end\" />\n                    }\n                />\n            </FormControl>\n            {\n                notifications.passwordsDontMatch ? (\n                    <Alert severity=\"error\">Passwords don't match</Alert>\n                ) : null\n            }\n            {\n                    notifications.userRegistered ? (\n              <Alert severity=\"success\">Account has been created! You can login now.</Alert>\n                    ) : null\n                }\n            <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Register'} onClick={handleSubmit} />\n        </div>\n        )\n    }\n\n    return (\n        <></>\n    );\n};\n\n\nexport default withRouter(SignUp);","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.actions.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/upload-event-image-step.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/password-validation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/email-validation.ts",["264","265"],"export const validateEmail = (email: string): boolean => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n};","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/index.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.graphql.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.styles.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.query.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/index.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner-button.component.tsx",["266"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            width: '100%'\n        },\n        wrapper: {\n            margin: theme.spacing(2),\n            position: 'relative',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        buttonProgress: {\n            color: green[500],\n            position: 'absolute',\n            top: '60%',\n            left: '50%',\n            marginTop: -12,\n            marginLeft: -12,\n        },\n    }),\n);\n\nconst SpinnerButton = ({ buttonLabel, onClick, loading, ...props }) => {\n    const classes = useStyles();\n    const timer = React.useRef<number>();\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(timer.current);\n        };\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                {<Button\n                    {...props}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    onClick={onClick}\n                >\n                    {buttonLabel}\n                </Button>}\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n        </div>\n    );\n};\n\nexport default SpinnerButton;","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.container.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.container.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/autocomplete.tsx",[],{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":15},{"ruleId":"271","severity":1,"message":"275","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":27},{"ruleId":"271","severity":1,"message":"276","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":29},{"ruleId":"271","severity":1,"message":"277","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":20},{"ruleId":"271","severity":1,"message":"278","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":20},{"ruleId":"271","severity":1,"message":"279","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":17},{"ruleId":"271","severity":1,"message":"280","line":13,"column":8,"nodeType":"273","messageId":"274","endLine":13,"endColumn":18},{"ruleId":"271","severity":1,"message":"281","line":96,"column":12,"nodeType":"273","messageId":"274","endLine":96,"endColumn":17},{"ruleId":"271","severity":1,"message":"282","line":96,"column":19,"nodeType":"273","messageId":"274","endLine":96,"endColumn":27},{"ruleId":"271","severity":1,"message":"283","line":2,"column":29,"nodeType":"273","messageId":"274","endLine":2,"endColumn":39},{"ruleId":"271","severity":1,"message":"284","line":3,"column":38,"nodeType":"273","messageId":"274","endLine":3,"endColumn":55},{"ruleId":"271","severity":1,"message":"285","line":16,"column":10,"nodeType":"273","messageId":"274","endLine":16,"endColumn":29},{"ruleId":"271","severity":1,"message":"286","line":17,"column":10,"nodeType":"273","messageId":"274","endLine":17,"endColumn":23},{"ruleId":"271","severity":1,"message":"287","line":8,"column":12,"nodeType":"273","messageId":"274","endLine":8,"endColumn":17},{"ruleId":"271","severity":1,"message":"288","line":14,"column":11,"nodeType":"273","messageId":"274","endLine":14,"endColumn":23},{"ruleId":"271","severity":1,"message":"289","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":16},{"ruleId":"271","severity":1,"message":"290","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"289","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":16},{"ruleId":"291","severity":1,"message":"292","line":2,"column":26,"nodeType":"293","messageId":"294","endLine":2,"endColumn":27,"suggestions":"295"},{"ruleId":"291","severity":1,"message":"292","line":2,"column":51,"nodeType":"293","messageId":"294","endLine":2,"endColumn":52,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":37,"column":32,"nodeType":"273","endLine":37,"endColumn":39},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"@typescript-eslint/no-unused-vars","'IUser' is defined but never used.","Identifier","unusedVar","'NavigationTwoTone' is defined but never used.","'DEFAULT_MAX_VERSION' is defined but never used.","'makeStyles' is defined but never used.","'FastfoodIcon' is defined but never used.","'HotelIcon' is defined but never used.","'RepeatIcon' is defined but never used.","'alert' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'Typography' is defined but never used.","'FunctionComponent' is defined but never used.","'RouteComponentProps' is defined but never used.","'StaticContext' is defined but never used.","'image' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["301","302"],["303","304"],"react-hooks/exhaustive-deps","The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","no-global-assign","no-unsafe-negation",{"messageId":"305","fix":"306","desc":"307"},{"messageId":"308","fix":"309","desc":"310"},{"messageId":"305","fix":"311","desc":"307"},{"messageId":"308","fix":"312","desc":"310"},"removeEscape",{"range":"313","text":"314"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"315","text":"316"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"317","text":"314"},{"range":"318","text":"316"},[84,85],"",[84,84],"\\",[109,110],[109,109]]