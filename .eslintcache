[{"/Users/joannanapora/forest-run/src/index.tsx":"1","/Users/joannanapora/forest-run/src/reportWebVitals.ts":"2","/Users/joannanapora/forest-run/src/store-redux/store.ts":"3","/Users/joannanapora/forest-run/src/App.tsx":"4","/Users/joannanapora/forest-run/src/store-redux/root-reducer.ts":"5","/Users/joannanapora/forest-run/src/App.styles.ts":"6","/Users/joannanapora/forest-run/src/nav/menu-drawer/menu-drawer.container.tsx":"7","/Users/joannanapora/forest-run/src/store-redux/nav/nav.reducer.ts":"8","/Users/joannanapora/forest-run/src/store-redux/user/user.reducer.ts":"9","/Users/joannanapora/forest-run/src/nav/menu-drawer/menu-drawer.styles.ts":"10","/Users/joannanapora/forest-run/src/store-redux/user/user.selectors.ts":"11","/Users/joannanapora/forest-run/src/store-redux/nav/nav.selectors.ts":"12","/Users/joannanapora/forest-run/src/nav/user-area/user-area.container.tsx":"13","/Users/joannanapora/forest-run/src/pages/donate/donate.component.tsx":"14","/Users/joannanapora/forest-run/src/pages/manage/manage.component.tsx":"15","/Users/joannanapora/forest-run/src/pages/manage/delete-post/delete-post.container.tsx":"16","/Users/joannanapora/forest-run/src/pages/manage/create-event/create-event.container.tsx":"17","/Users/joannanapora/forest-run/src/pages/notice-board/articles/notice-board.container.tsx":"18","/Users/joannanapora/forest-run/src/pages/manage/delete-event/delete-event.container.tsx":"19","/Users/joannanapora/forest-run/src/pages/events/event-card/event.component.tsx":"20","/Users/joannanapora/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx":"21","/Users/joannanapora/forest-run/src/pages/manage/create-post/create-post.container.tsx":"22","/Users/joannanapora/forest-run/src/pages/events/event-list/event-list.component.tsx":"23","/Users/joannanapora/forest-run/src/pages/landing/timelines/timelines.component.tsx":"24","/Users/joannanapora/forest-run/src/store-redux/user/user.types.ts":"25","/Users/joannanapora/forest-run/src/store-redux/index.ts":"26","/Users/joannanapora/forest-run/src/pages/landing/timelines/timelines.styles.ts":"27","/Users/joannanapora/forest-run/src/grapQL/user/user.mutation.ts":"28","/Users/joannanapora/forest-run/src/shared/spinner.component.tsx":"29","/Users/joannanapora/forest-run/src/store-redux/user/user.actions.ts":"30","/Users/joannanapora/forest-run/src/grapQL/index.ts":"31","/Users/joannanapora/forest-run/src/grapQL/event/event.query.ts":"32","/Users/joannanapora/forest-run/src/grapQL/event/event.mutation.ts":"33","/Users/joannanapora/forest-run/src/grapQL/post/post.query.tsx":"34","/Users/joannanapora/forest-run/src/grapQL/user/user.graphql.ts":"35","/Users/joannanapora/forest-run/src/grapQL/post/post.mutation.ts":"36","/Users/joannanapora/forest-run/src/pages/events/event-list/event-list.styles.ts":"37","/Users/joannanapora/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts":"38","/Users/joannanapora/forest-run/src/pages/manage/create-post/create-post.styles.ts":"39","/Users/joannanapora/forest-run/src/models/when.enum.ts":"40","/Users/joannanapora/forest-run/src/axios/image.api.ts":"41","/Users/joannanapora/forest-run/src/pages/events/event-card/event.styles.tsx":"42","/Users/joannanapora/forest-run/src/shared/spinner-button.component.tsx":"43","/Users/joannanapora/forest-run/src/pages/login/sign-up/sign-up.container.tsx":"44","/Users/joannanapora/forest-run/src/pages/login/sign-in/sign-in.container.tsx":"45","/Users/joannanapora/forest-run/src/pages/manage/delete-event/delete-event.styles.ts":"46","/Users/joannanapora/forest-run/src/pages/notice-board/articles/notice-board.styles.ts":"47","/Users/joannanapora/forest-run/src/pages/manage/create-event/create-event.styles.ts":"48","/Users/joannanapora/forest-run/src/pages/manage/delete-post/delete-post.styles.ts":"49","/Users/joannanapora/forest-run/src/pages/manage/manage.styles.ts":"50","/Users/joannanapora/forest-run/src/pages/donate/donate.styles.ts":"51","/Users/joannanapora/forest-run/src/pages/notice-board/search-post/search-post.component.tsx":"52","/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.component.tsx":"53","/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.component.tsx":"54","/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.component.tsx":"55","/Users/joannanapora/forest-run/src/stripe/stripe.component.tsx":"56","/Users/joannanapora/forest-run/src/pages/login/sign-in/sign-in.styles.ts":"57","/Users/joannanapora/forest-run/src/shared/email-validation.ts":"58","/Users/joannanapora/forest-run/src/pages/login/sign-up/sign-up.styles.ts":"59","/Users/joannanapora/forest-run/src/shared/password-validation.ts":"60","/Users/joannanapora/forest-run/src/nav/user-area/user-area.styles.ts":"61","/Users/joannanapora/forest-run/src/pages/notice-board/search-post/search-post.styles.ts":"62","/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.styles.ts":"63","/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.styles.ts":"64","/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.styles.ts":"65","/Users/joannanapora/Desktop/programming/forest/forest-run/src/index.tsx":"66","/Users/joannanapora/Desktop/programming/forest/forest-run/src/reportWebVitals.ts":"67","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/store.ts":"68","/Users/joannanapora/Desktop/programming/forest/forest-run/src/App.tsx":"69","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/root-reducer.ts":"70","/Users/joannanapora/Desktop/programming/forest/forest-run/src/App.styles.ts":"71","/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/menu-drawer/menu-drawer.container.tsx":"72","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.reducer.ts":"73","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/nav/nav.reducer.ts":"74","/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/menu-drawer/menu-drawer.styles.ts":"75","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.selectors.ts":"76","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/nav/nav.selectors.ts":"77","/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/user-area/user-area.container.tsx":"78","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/donate/donate.component.tsx":"79","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/create-event.container.tsx":"80","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-post/create-post.container.tsx":"81","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-event/delete-event.container.tsx":"82","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx":"83","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/articles/notice-board.container.tsx":"84","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-post/delete-post.container.tsx":"85","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-list/event-list.component.tsx":"86","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-card/event.component.tsx":"87","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.types.ts":"88","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/index.ts":"89","/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/user-area/user-area.styles.ts":"90","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/user/user.mutation.ts":"91","/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.actions.ts":"92","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-card/event.styles.tsx":"93","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts":"94","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-list/event-list.styles.ts":"95","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-event/delete-event.styles.ts":"96","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/articles/notice-board.styles.ts":"97","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-post/delete-post.styles.ts":"98","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-post/create-post.styles.ts":"99","/Users/joannanapora/Desktop/programming/forest/forest-run/src/models/when.enum.ts":"100","/Users/joannanapora/Desktop/programming/forest/forest-run/src/axios/image.api.ts":"101","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/donate/donate.styles.ts":"102","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/create-event.styles.ts":"103","/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/spinner-button.component.tsx":"104","/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/spinner.component.tsx":"105","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/post/post.query.tsx":"106","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-up/sign-up.container.tsx":"107","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/search-post/search-post.component.tsx":"108","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in/sign-in.container.tsx":"109","/Users/joannanapora/Desktop/programming/forest/forest-run/src/stripe/stripe.component.tsx":"110","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.component.tsx":"111","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.component.tsx":"112","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.component.tsx":"113","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/index.ts":"114","/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/password-validation.ts":"115","/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/email-validation.ts":"116","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in/sign-in.styles.ts":"117","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-up/sign-up.styles.ts":"118","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/search-post/search-post.styles.ts":"119","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.styles.ts":"120","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.styles.ts":"121","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.styles.ts":"122","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/user/user.graphql.ts":"123","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/post/post.mutation.ts":"124","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/event/event.mutation.ts":"125","/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/event/event.query.ts":"126","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/manage/manage.component.tsx":"127","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/manage/manage.styles.ts":"128"},{"size":1278,"mtime":1614349874529,"results":"129","hashOfConfig":"130"},{"size":425,"mtime":1614349874551,"results":"131","hashOfConfig":"130"},{"size":307,"mtime":1614349874556,"results":"132","hashOfConfig":"130"},{"size":300,"mtime":1614349874524,"results":"133","hashOfConfig":"130"},{"size":461,"mtime":1614349874556,"results":"134","hashOfConfig":"130"},{"size":164,"mtime":1614349874524,"results":"135","hashOfConfig":"130"},{"size":6528,"mtime":1614349874530,"results":"136","hashOfConfig":"130"},{"size":953,"mtime":1614349874555,"results":"137","hashOfConfig":"130"},{"size":527,"mtime":1614349874557,"results":"138","hashOfConfig":"130"},{"size":2485,"mtime":1614349874530,"results":"139","hashOfConfig":"130"},{"size":184,"mtime":1614349874557,"results":"140","hashOfConfig":"130"},{"size":169,"mtime":1614349874555,"results":"141","hashOfConfig":"130"},{"size":5600,"mtime":1614349874531,"results":"142","hashOfConfig":"130"},{"size":2845,"mtime":1614349874532,"results":"143","hashOfConfig":"130"},{"size":3411,"mtime":1614349874548,"results":"144","hashOfConfig":"130"},{"size":9524,"mtime":1614349874547,"results":"145","hashOfConfig":"130"},{"size":15694,"mtime":1614349874541,"results":"146","hashOfConfig":"130"},{"size":3557,"mtime":1614350724106,"results":"147","hashOfConfig":"130"},{"size":9108,"mtime":1614349874546,"results":"148","hashOfConfig":"130"},{"size":3191,"mtime":1614349874533,"results":"149","hashOfConfig":"130"},{"size":1007,"mtime":1614349874538,"results":"150","hashOfConfig":"130"},{"size":8795,"mtime":1614350546559,"results":"151","hashOfConfig":"130"},{"size":11804,"mtime":1614350820990,"results":"152","hashOfConfig":"130"},{"size":3825,"mtime":1614349874535,"results":"153","hashOfConfig":"130"},{"size":76,"mtime":1614349874558,"results":"154","hashOfConfig":"130"},{"size":108,"mtime":1614349874555,"results":"155","hashOfConfig":"130"},{"size":242,"mtime":1614349874536,"results":"156","hashOfConfig":"130"},{"size":247,"mtime":1614349874528,"results":"157","hashOfConfig":"130"},{"size":753,"mtime":1614349874554,"results":"158","hashOfConfig":"130"},{"size":180,"mtime":1614349874557,"results":"159","hashOfConfig":"130"},{"size":226,"mtime":1614349874526,"results":"160","hashOfConfig":"130"},{"size":439,"mtime":1614349874526,"results":"161","hashOfConfig":"130"},{"size":1433,"mtime":1614349874526,"results":"162","hashOfConfig":"130"},{"size":326,"mtime":1614349874527,"results":"163","hashOfConfig":"130"},{"size":587,"mtime":1614349874528,"results":"164","hashOfConfig":"130"},{"size":664,"mtime":1614349874527,"results":"165","hashOfConfig":"130"},{"size":1524,"mtime":1614349874534,"results":"166","hashOfConfig":"130"},{"size":1728,"mtime":1614349874538,"results":"167","hashOfConfig":"130"},{"size":3923,"mtime":1614349874546,"results":"168","hashOfConfig":"130"},{"size":1554,"mtime":1614349874529,"results":"169","hashOfConfig":"130"},{"size":400,"mtime":1614349874525,"results":"170","hashOfConfig":"130"},{"size":973,"mtime":1614349874533,"results":"171","hashOfConfig":"130"},{"size":1599,"mtime":1614349874553,"results":"172","hashOfConfig":"130"},{"size":11256,"mtime":1614349874540,"results":"173","hashOfConfig":"130"},{"size":5228,"mtime":1614349874539,"results":"174","hashOfConfig":"130"},{"size":2092,"mtime":1614349874547,"results":"175","hashOfConfig":"130"},{"size":2393,"mtime":1614349874549,"results":"176","hashOfConfig":"130"},{"size":1939,"mtime":1614349874542,"results":"177","hashOfConfig":"130"},{"size":2225,"mtime":1614349874547,"results":"178","hashOfConfig":"130"},{"size":2604,"mtime":1614349874548,"results":"179","hashOfConfig":"130"},{"size":1139,"mtime":1614349874532,"results":"180","hashOfConfig":"130"},{"size":575,"mtime":1614349874550,"results":"181","hashOfConfig":"130"},{"size":1171,"mtime":1614351216536,"results":"182","hashOfConfig":"130"},{"size":1524,"mtime":1614349874545,"results":"183","hashOfConfig":"130"},{"size":4282,"mtime":1614349874543,"results":"184","hashOfConfig":"130"},{"size":755,"mtime":1614349874558,"results":"185","hashOfConfig":"130"},{"size":888,"mtime":1614349874539,"results":"186","hashOfConfig":"130"},{"size":280,"mtime":1614349874551,"results":"187","hashOfConfig":"130"},{"size":465,"mtime":1614349874540,"results":"188","hashOfConfig":"130"},{"size":197,"mtime":1614349874552,"results":"189","hashOfConfig":"130"},{"size":658,"mtime":1614349874531,"results":"190","hashOfConfig":"130"},{"size":414,"mtime":1614349874550,"results":"191","hashOfConfig":"130"},{"size":984,"mtime":1614349874543,"results":"192","hashOfConfig":"130"},{"size":518,"mtime":1614349874545,"results":"193","hashOfConfig":"130"},{"size":627,"mtime":1614349874544,"results":"194","hashOfConfig":"130"},{"size":1278,"mtime":1620037561230,"results":"195","hashOfConfig":"196"},{"size":425,"mtime":1620037561255,"results":"197","hashOfConfig":"196"},{"size":307,"mtime":1620037561260,"results":"198","hashOfConfig":"196"},{"size":300,"mtime":1620037561226,"results":"199","hashOfConfig":"196"},{"size":461,"mtime":1620037561259,"results":"200","hashOfConfig":"196"},{"size":164,"mtime":1620037561226,"results":"201","hashOfConfig":"196"},{"size":6581,"mtime":1620137345363,"results":"202","hashOfConfig":"196"},{"size":527,"mtime":1620037561261,"results":"203","hashOfConfig":"196"},{"size":953,"mtime":1620037561258,"results":"204","hashOfConfig":"196"},{"size":2485,"mtime":1620037561232,"results":"205","hashOfConfig":"196"},{"size":184,"mtime":1620048325205,"results":"206","hashOfConfig":"196"},{"size":169,"mtime":1620037561259,"results":"207","hashOfConfig":"196"},{"size":5600,"mtime":1620037561233,"results":"208","hashOfConfig":"196"},{"size":2845,"mtime":1620037561234,"results":"209","hashOfConfig":"196"},{"size":13132,"mtime":1620047470936,"results":"210","hashOfConfig":"196"},{"size":7609,"mtime":1620047906898,"results":"211","hashOfConfig":"196"},{"size":7157,"mtime":1620137315509,"results":"212","hashOfConfig":"196"},{"size":1007,"mtime":1620037561239,"results":"213","hashOfConfig":"196"},{"size":2964,"mtime":1620040485681,"results":"214","hashOfConfig":"196"},{"size":7280,"mtime":1620122054016,"results":"215","hashOfConfig":"196"},{"size":9927,"mtime":1620048594796,"results":"216","hashOfConfig":"196"},{"size":3191,"mtime":1620037561235,"results":"217","hashOfConfig":"196"},{"size":76,"mtime":1620037561264,"results":"218","hashOfConfig":"196"},{"size":108,"mtime":1620037561257,"results":"219","hashOfConfig":"196"},{"size":658,"mtime":1620037561233,"results":"220","hashOfConfig":"196"},{"size":247,"mtime":1620037561229,"results":"221","hashOfConfig":"196"},{"size":180,"mtime":1620037561261,"results":"222","hashOfConfig":"196"},{"size":973,"mtime":1620037561235,"results":"223","hashOfConfig":"196"},{"size":1728,"mtime":1620037561239,"results":"224","hashOfConfig":"196"},{"size":1524,"mtime":1620037561237,"results":"225","hashOfConfig":"196"},{"size":1854,"mtime":1620051220676,"results":"226","hashOfConfig":"196"},{"size":2055,"mtime":1620040572293,"results":"227","hashOfConfig":"196"},{"size":2225,"mtime":1620037561251,"results":"228","hashOfConfig":"196"},{"size":3923,"mtime":1620037561249,"results":"229","hashOfConfig":"196"},{"size":1554,"mtime":1620037561231,"results":"230","hashOfConfig":"196"},{"size":400,"mtime":1620037561227,"results":"231","hashOfConfig":"196"},{"size":1139,"mtime":1620037561234,"results":"232","hashOfConfig":"196"},{"size":1584,"mtime":1620121336800,"results":"233","hashOfConfig":"196"},{"size":1599,"mtime":1620037561256,"results":"234","hashOfConfig":"196"},{"size":753,"mtime":1620037561257,"results":"235","hashOfConfig":"196"},{"size":326,"mtime":1620037561228,"results":"236","hashOfConfig":"196"},{"size":11256,"mtime":1620037561241,"results":"237","hashOfConfig":"196"},{"size":575,"mtime":1620037561254,"results":"238","hashOfConfig":"196"},{"size":5228,"mtime":1620037561240,"results":"239","hashOfConfig":"196"},{"size":755,"mtime":1620037561265,"results":"240","hashOfConfig":"196"},{"size":4282,"mtime":1620037561245,"results":"241","hashOfConfig":"196"},{"size":369,"mtime":1620047363513,"results":"242","hashOfConfig":"196"},{"size":1524,"mtime":1620037561247,"results":"243","hashOfConfig":"196"},{"size":226,"mtime":1620037561227,"results":"244","hashOfConfig":"196"},{"size":197,"mtime":1620037561256,"results":"245","hashOfConfig":"196"},{"size":280,"mtime":1620037561255,"results":"246","hashOfConfig":"196"},{"size":888,"mtime":1620037561241,"results":"247","hashOfConfig":"196"},{"size":465,"mtime":1620037561242,"results":"248","hashOfConfig":"196"},{"size":414,"mtime":1620037561254,"results":"249","hashOfConfig":"196"},{"size":816,"mtime":1620049594495,"results":"250","hashOfConfig":"196"},{"size":627,"mtime":1620037561246,"results":"251","hashOfConfig":"196"},{"size":460,"mtime":1620049526422,"results":"252","hashOfConfig":"196"},{"size":587,"mtime":1620037561229,"results":"253","hashOfConfig":"196"},{"size":664,"mtime":1620037561228,"results":"254","hashOfConfig":"196"},{"size":1433,"mtime":1620037561227,"results":"255","hashOfConfig":"196"},{"size":439,"mtime":1620037561227,"results":"256","hashOfConfig":"196"},{"size":2608,"mtime":1620048439721,"results":"257","hashOfConfig":"196"},{"size":2125,"mtime":1620047935061,"results":"258","hashOfConfig":"196"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},"3t1ldg",{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"261"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"261"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"261"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"261"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"261"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"261"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},"1tn6e8d",{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"398"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"398"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"398"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"398"},"/Users/joannanapora/forest-run/src/index.tsx",[],["524","525"],"/Users/joannanapora/forest-run/src/reportWebVitals.ts",[],"/Users/joannanapora/forest-run/src/store-redux/store.ts",[],"/Users/joannanapora/forest-run/src/App.tsx",[],"/Users/joannanapora/forest-run/src/store-redux/root-reducer.ts",[],"/Users/joannanapora/forest-run/src/App.styles.ts",[],"/Users/joannanapora/forest-run/src/nav/menu-drawer/menu-drawer.container.tsx",[],"/Users/joannanapora/forest-run/src/store-redux/nav/nav.reducer.ts",[],"/Users/joannanapora/forest-run/src/store-redux/user/user.reducer.ts",[],"/Users/joannanapora/forest-run/src/nav/menu-drawer/menu-drawer.styles.ts",[],"/Users/joannanapora/forest-run/src/store-redux/user/user.selectors.ts",[],"/Users/joannanapora/forest-run/src/store-redux/nav/nav.selectors.ts",[],"/Users/joannanapora/forest-run/src/nav/user-area/user-area.container.tsx",[],"/Users/joannanapora/forest-run/src/pages/donate/donate.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/manage.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/delete-post/delete-post.container.tsx",["526"],"import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\n\nimport { useDeletePostStyles } from './delete-post.styles';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Button, Typography } from '@material-ui/core';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withRouter } from 'react-router-dom';\nimport Modal from '@material-ui/core/Modal';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularIndeterminate from '../../../shared/spinner.component';\n\nimport { DELETE_POST, GET_POSTS } from '../../../grapQL';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\nimport { format } from 'date-fns';\n\ninterface IAllAlerts {\n    postDeleted: boolean;\n    internalBackendError: boolean;\n    pleaseLogIn: boolean;\n}\n\n\nconst DeletePost = ({ history }) => {\n    const classes = useDeletePostStyles();\n    const [articleState, setArticleStateState] = useState(null);\n    const [modalStyle] = useState(getModalStyle);\n    const [openModal, setOpenModal]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [alert, setAlert]: [IAllAlerts, Dispatch<SetStateAction<IAllAlerts>>] = useState(\n        {\n            internalBackendError: false,\n            pleaseLogIn: false,\n            postDeleted: false,\n        }\n    );\n\n    useEffect(() => {\n        refetch()\n    }, []);\n\n\n    const { loading, error, data, refetch } = useQuery(GET_POSTS, {\n        variables: {\n            filters: {\n                me: true,\n                phrase: \"\",\n            }\n        },\n        onCompleted: (result) => {\n            let articlesStateObj = {};\n\n            result.posts.forEach(post => {\n                articlesStateObj[post.id] = false;\n            });\n\n            setArticleStateState(articlesStateObj);\n        },\n        onError: (e) => {\n            if ((e.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true });\n            }\n            if ((e.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogIn: true })\n            }\n        }\n    });\n\n\n    const [deletePost] = useMutation(DELETE_POST, {\n        onError: (e) => {\n            if ((e.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true });\n            }\n            if ((e.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogIn: true })\n            }\n        },\n        onCompleted: () => {\n            setOpenModal(false);\n            refetch();\n            setAlert({ ...alert, postDeleted: true })\n        }\n    });\n\n    if (error) {\n        return (\n            <div className={classes.alert}><Alert severity=\"error\">Ooops! Try again later.</Alert></div>)\n    }\n\n    const handleYes = () => {\n        let listOfObjectsToDelete = [];\n\n        for (const postId in articleState) {\n            if (articleState[postId] === true) {\n                listOfObjectsToDelete.push(postId);\n            }\n        }\n        deletePost(\n            {\n                variables: {\n                    ids: listOfObjectsToDelete\n                },\n                refetchQueries: [{\n                    query: GET_POSTS,\n                    variables: {\n                        filters: {\n                            me: false,\n                            phrase: \"\"\n                        }\n                    }\n                }],\n            }\n        );\n    };\n    const handleNo = () => {\n        setOpenModal(false);\n    };\n\n    const redirectToManage = () => {\n        if (history) {\n            history.push('/manage/')\n        }\n    };\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n\n    const bodyConfirmDelete = (\n        <div style={modalStyle} className={classes.paper}>\n            <Typography>Are you sure you want to delete?</Typography>\n            <div className={classes.confirmButtons}>\n                <Button\n                    onClick={handleNo}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    No\n      </Button>\n                <Button\n                    onClick={handleYes}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    Yes\n      </Button>\n            </div>\n        </div>\n    );\n\n    function rand() {\n        return Math.round(Math.random() * 20) - 10;\n    };\n\n    function getModalStyle() {\n        const top = 50 + rand();\n        const left = 50 + rand();\n\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    };\n\n\n    const handleDeleteButton = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        setOpenModal(true);\n    };\n\n\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, id: string) => {\n        setArticleStateState({ ...articleState, [id]: event.target.checked });\n    };\n\n    let checkIfDisableButton = true;\n\n    for (const postId in articleState) {\n        if (articleState[postId] === true) {\n            checkIfDisableButton = false\n        }\n    }\n\n    return (\n        <div className={classes.container} >\n            <Button\n                onClick={redirectToManage}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"medium\"\n                className={classes.buttonBack}\n                startIcon={< ArrowBackIcon />}\n            >\n                Back\n      </Button>\n            {\n                !data || loading ?\n                    <CircularIndeterminate />\n                    :\n                    <div className={classes.checkboxes}>\n                        {alert.internalBackendError ? (\n                            <Alert severity=\"error\">Ooops! Something went wrong, try again later.</Alert>\n                        ) : null}\n                        {alert.pleaseLogIn ? (\n                            <Alert severity=\"warning\">Please log in to delete event.</Alert>\n                        ) : null}\n                        {alert.postDeleted ? (\n                            <Alert severity=\"success\">Post/s has been deleted.</Alert>\n                        ) : null}\n                        <FormGroup>\n                            {\n                                data?.posts.length < 1 ?\n                                    <div className={classes.noPosts}>There are no posts.</div>\n                                    :\n                                    null\n                            }\n                            {\n                                articleState ?\n                                    data?.posts?.map((post) => {\n                                        return (\n                                            <FormControlLabel key={post.id}\n                                                control={\n                                                    <Checkbox\n                                                        checked={articleState[post.id]}\n                                                        onChange={(e) => handleChange(e, post.id)}\n                                                        name={post.id}\n                                                        color=\"primary\"\n                                                    />\n                                                }\n\n                                                label={\n                                                    <div className={classes.articlesFormLabel}>\n                                                        <div className={classes.date}>\n                                                            {format(new Date(post.dateCreated), 'dd/MM/yyyy')}\n                                                        </div>\n                                                        <div>\n                                                            {post.title}\n                                                        </div>\n                                                    </div>\n                                                }\n\n                                            />\n                                        )\n                                    }) : null\n                            }\n                        </FormGroup>\n                    </div>}\n            <Button\n                onClick={handleDeleteButton}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                className={classes.button}\n                startIcon={<DeleteIcon />}\n                disabled={data?.posts.length < 1 || checkIfDisableButton}\n            >\n                DELETE\n      </Button>\n            <Modal\n                open={openModal}\n                onClose={handleModalClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {bodyConfirmDelete}\n            </Modal>\n        </div>\n    )\n};\n\nexport default withRouter(DeletePost);","/Users/joannanapora/forest-run/src/pages/manage/create-event/create-event.container.tsx",["527"],"import React, { Dispatch, SetStateAction, useState } from 'react';\n\nimport { useCreateEventStyles } from './create-event.styles';\n\nimport MeetingPoint from './new-event/event-meetpoint/event-details.component';\nimport UploudEventImage from './new-event/event-image/event-image.component';\nimport EventDetails from './new-event/event-details/event-info.component';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Typography from '@material-ui/core/Typography';\nimport Stepper from '@material-ui/core/Stepper';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Alert from '@material-ui/lab/Alert';\nimport Step from '@material-ui/core/Step';\n\nimport { mapOptionsToWhen } from '../../../models/when.enum';\n\nimport { Paper, StepContent, StepLabel } from '@material-ui/core';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { postImage } from '../../../axios/image.api';\nimport { CREATE_EVENT, GET_EVENTS } from '../../../grapQL';\n\nfunction getSteps() {\n    return ['Set up event details', 'Meeting place and Event description', 'Upload Event Image'];\n}\n\ninterface Notifications {\n    internalBackendError: boolean;\n    dateInPast: boolean;\n    missedInputs: {\n        emptyWhen: boolean;\n        emptyLocation: boolean;\n        emptyDate: boolean;\n        emptyDistance: boolean;\n        emptyTime: boolean;\n    };\n    eventCreated: boolean;\n    pleaseLogin: boolean;\n}\n\ninterface IAllEventDetails {\n    organizerName: string;\n    organizerPhoneNumber: string;\n    meetingPoint: string;\n    eventDescription: string;\n    location: string;\n    when: string;\n    distance: string;\n    image: File;\n}\n\nconst CreateEvent = ({ history }) => {\n    const classes = useCreateEventStyles();\n    const [activeStep, setActiveStep]: [number, Dispatch<SetStateAction<number>>] = useState(0);\n    const [openModal, setOpenModal]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [imageLoading, setImageLoading]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [imgid, setImageId]: [string, Dispatch<SetStateAction<string>>] = useState(\"\");\n    const [alert, setAlert]: [Notifications, Dispatch<SetStateAction<Notifications>>] = useState({\n        internalBackendError: false,\n        dateInPast: false,\n        missedInputs: {\n            emptyWhen: false,\n            emptyLocation: false,\n            emptyDate: false,\n            emptyDistance: false,\n            emptyTime: false,\n        },\n        eventCreated: false,\n        pleaseLogin: false,\n    });\n\n    const [allDetails, setAllDetails]: [IAllEventDetails, Dispatch<SetStateAction<IAllEventDetails>>] = useState({\n        organizerName: '',\n        organizerPhoneNumber: '',\n        meetingPoint: '',\n        eventDescription: '',\n        location: '',\n        when: '',\n        distance: '',\n        image: null,\n    })\n\n    const calenderDate = new Date();\n    const newDate = calenderDate.setDate(calenderDate.getDate() + 1)\n    const [modalStyle] = useState(getModalStyle);\n    const [dateValue, changeDate] = useState(new Date(newDate));\n    const [timeValue, changeTime] = useState(new Date());\n\n    const [createEvent] = useMutation(CREATE_EVENT, {\n        onCompleted: () => {\n            setAlert({ ...alert, eventCreated: true });\n        },\n        onError: (error) => {\n            if ((error.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true });\n            }\n            if ((error.graphQLErrors[0].message as any).statusCode === 400) {\n                if ((error.graphQLErrors[0].message as any).message === \"date-in-past\") {\n                    setAlert({ ...alert, dateInPast: true });\n                }\n            }\n            if ((error.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogin: true })\n            }\n        }\n    });\n\n    const handleDetailChange = (prop) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAlert({\n            missedInputs: {\n                emptyWhen: false,\n                emptyLocation: false,\n                emptyDate: false,\n                emptyDistance: false,\n                emptyTime: false\n            },\n            eventCreated: false,\n            internalBackendError: false,\n            dateInPast: false,\n            pleaseLogin: false,\n        });\n        if (prop === 'image') {\n            setImageLoading(true)\n            postImage(event.target.files[0])\n                .then((result) => {\n                    setAllDetails({ ...allDetails, image: event.target.files[0] });\n                    setImageId(result.data.id);\n                    setImageLoading(false)\n                })\n        }\n        if (prop === 'distance' && event.target.value.length > 5) {\n            setAllDetails({ ...allDetails, distance: event.target.value.slice(0, -1) });\n        }\n        if (prop === 'distance' && event.target.value === '0') {\n            setAllDetails({ ...allDetails, distance: '1' });\n        }\n        if (prop === 'distance' && Number(event.target.value) < 0) {\n            setAllDetails({ ...allDetails, distance: (Number(event.target.value) * -1).toString() });\n        }\n        else {\n            setAllDetails({ ...allDetails, [prop]: event.target.value });\n        }\n    };\n\n\n\n    const handleValidation = (): boolean => {\n        const newDate = new Date();\n        if (allDetails.when === '') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyWhen: true } });\n            return false;\n        }\n        if (timeValue === null) {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyTime: true } });\n            return false;\n        }\n        if (allDetails.location === '') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyLocation: true } });\n            return false;\n        }\n        if (allDetails.distance === '') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyDistance: true } });\n            return false;\n        }\n        if (dateValue === null && allDetails.when === 'one time event') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyDate: true } });\n            return false;\n        }\n        if (dateValue)\n\n            return true;\n    };\n\n\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return (\n                    <EventDetails\n                        dateValue={dateValue}\n                        timeValue={timeValue}\n                        locationValue={allDetails.location}\n                        distanceValue={allDetails.distance}\n                        whenValue={allDetails.when}\n                        changeWhen={handleDetailChange('when')}\n                        changeDistance={handleDetailChange('distance')}\n                        changeLocation={handleDetailChange('location')}\n                        changeDate={changeDate}\n                        changeTime={changeTime}\n                        distanceRequiredAlert={alert.missedInputs.emptyDistance}\n                        dateRequiredAlert={alert.missedInputs.emptyDate}\n                        timeRequiredAlert={alert.missedInputs.emptyTime}\n                        whenRequiredAlert={alert.missedInputs.emptyWhen}\n                        locationRequiredAlert={alert.missedInputs.emptyLocation}\n                    />\n                );\n            case 1:\n                return (\n                    <MeetingPoint\n                        changeOrganizerName={handleDetailChange('organizerName')}\n                        changeOrganizerPhoneNumber={handleDetailChange('organizerPhoneNumber')}\n                        changeMeetingPoint={handleDetailChange('meetingPoint')}\n                        changeEventDescription={handleDetailChange('eventDescription')}\n                        organizerNameValue={allDetails.organizerName}\n                        organizerPhoneNumberValue={allDetails.organizerPhoneNumber}\n                        meetingPointValue={allDetails.meetingPoint}\n                        eventDescriptionValue={allDetails.eventDescription} />\n                );\n            case 2:\n                return (\n                    <UploudEventImage\n                        onImageUpload={handleDetailChange('image')}\n                        imageValue={allDetails.image}\n                        imageLoading={imageLoading}\n                    />\n\n                );\n            default:\n                return 'Unknown step';\n        }\n    }\n\n    const steps = getSteps();\n\n\n    function rand() {\n        return Math.round(Math.random() * 20) - 10;\n    }\n\n    function getModalStyle() {\n        const top = 50 + rand();\n        const left = 50 + rand();\n\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n\n    const handleModalNo = () => {\n        setOpenModal(false);\n    }\n\n    const handleModalYes = () => {\n        setOpenModal(false);\n        setActiveStep(0);\n    }\n\n    const redirectToManage = () => {\n        if (history) {\n            history.push('/manage')\n        }\n    };\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n    const handleNext = () => {\n        const isValidate = handleValidation();\n        if (isValidate) {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setOpenModal(true);\n    };\n\n    const handleSubmit = () => {\n        createEvent(\n            {\n                variables: {\n                    when: mapOptionsToWhen(allDetails.when),\n                    ...mapOptionsToWhen(allDetails.when) === 0 && { date: dateValue.toISOString() },\n                    time: timeValue.toISOString(),\n                    location: allDetails.location,\n                    distance: Number(allDetails.distance),\n                    organizerName: allDetails.organizerName,\n                    organizerPhoneNumber: allDetails.organizerPhoneNumber,\n                    meetingPoint: allDetails.meetingPoint,\n                    description: allDetails.eventDescription,\n                    ...!!imgid && { imageId: imgid }\n                },\n                refetchQueries: [{\n                    query: GET_EVENTS,\n                    variables: {\n                        filters: {\n                            me: false,\n                            participateCounter: undefined,\n                            distance: undefined,\n                            joined: false,\n                        }\n                    }\n                }],\n            },\n\n        );\n    }\n\n    const bodyConfirmPost = (\n        <div style={modalStyle} className={classes.paper}>\n            <Typography>Are you sure you want to reset?</Typography>\n            <div className={classes.confirmButtons}>\n                <Button\n                    onClick={handleModalNo}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    No\n      </Button>\n                <Button\n                    onClick={handleModalYes}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    Yes\n      </Button>\n            </div>\n        </div>\n    );\n\n\n    return (\n        <div className={classes.root}>\n            <Button\n                onClick={redirectToManage}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"medium\"\n                className={classes.buttonBack}\n                startIcon={< ArrowBackIcon />}\n            >\n                Back\n      </Button>\n            <Stepper className={classes.stepper} activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                        <StepContent>\n                            <div>{getStepContent(index)}</div>\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                    <Button\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        className={classes.button}\n                                    >\n                                        Back\n                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n                ))}\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All Steps Completed</Typography>\n                    <div className={classes.actionsContainer}>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n            </Button>\n                        <Button variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSubmit} className={classes.button}>\n                            Submit\n            </Button>\n                        {\n                            alert.eventCreated ? (\n                                <div className={classes.alert}><Alert severity=\"success\">New event has been created.</Alert></div>\n                            ) : null\n                        }\n                        {\n                            alert.internalBackendError ? (\n                                <div className={classes.alert}><Alert severity=\"error\">Ooops! Something went wrong, try again later.</Alert></div>\n                            ) : null\n                        }\n                        {\n                            alert.dateInPast ? (\n                                <div className={classes.alert}><Alert severity=\"error\">You've entered date in the past.</Alert></div>\n                            ) : null\n                        }\n                        {\n                            alert.pleaseLogin ? (\n                                <div className={classes.alert}><Alert severity=\"error\">Please login to create event.</Alert></div>\n                            ) : null\n                        }\n                    </div >\n                </Paper >\n            )}\n            <Modal\n                open={openModal}\n                onClose={handleModalClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {bodyConfirmPost}\n            </Modal>\n        </div >\n    )\n};\n\nexport default CreateEvent;","/Users/joannanapora/forest-run/src/pages/notice-board/articles/notice-board.container.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/delete-event/delete-event.container.tsx",["528"],"import React, { Dispatch, useState, SetStateAction, useEffect } from 'react';\n\nimport { useDeleteEventStyles } from './delete-event.styles';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Button, Typography } from '@material-ui/core';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Modal from '@material-ui/core/Modal';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { GET_EVENTS, DELETE_EVENT } from '../../../grapQL';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\nimport { format } from 'date-fns';\nimport CircularIndeterminate from '../../../shared/spinner.component';\n\ninterface IAllAlerts {\n    eventDeleted: boolean;\n    internalBackendError: boolean;\n    pleaseLogIn: boolean;\n}\n\nconst DeleteEvent = ({ history }) => {\n    const classes = useDeleteEventStyles();\n\n    const [articleState, setArticleStateState] = useState(null);\n    const [modalStyle] = useState(getModalStyle);\n    const [openModal, setOpenModal]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [alert, setAlert]: [IAllAlerts, Dispatch<SetStateAction<IAllAlerts>>] = useState(\n        {\n            internalBackendError: false,\n            pleaseLogIn: false,\n            eventDeleted: false,\n        }\n    );\n\n    useEffect(() => {\n        refetch()\n    }, []);\n\n\n    const { loading, error, data, refetch } = useQuery(GET_EVENTS, {\n        variables: { filters: { me: true } },\n        onCompleted: (result) => {\n            let articlesStateObj = {};\n\n            result.events.forEach(event => {\n                articlesStateObj[event.id] = false;\n            });\n\n            setArticleStateState(articlesStateObj);\n        },\n        onError: (error) => {\n            if ((error.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true });\n            }\n            if ((error.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogIn: true })\n            }\n        }\n    });\n\n\n    const [deleteEvent] = useMutation(DELETE_EVENT, {\n        onError: (e) => {\n            if ((e.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true });\n            }\n            if ((e.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogIn: true })\n            }\n        },\n        onCompleted: () => {\n            setOpenModal(false);\n            refetch();\n            setAlert({ ...alert, eventDeleted: true });\n        }\n    });\n\n\n    if (error) {\n        return (\n            <div className={classes.alert}><Alert severity=\"error\">Ooops! Try again later.</Alert></div>)\n    }\n\n    function rand() {\n        return Math.round(Math.random() * 20) - 10;\n    };\n\n    function getModalStyle() {\n        const top = 50 + rand();\n        const left = 50 + rand();\n\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    };\n\n\n    let listOfObjectsToDelete = [];\n\n    const handleYes = () => {\n\n        for (const eventId in articleState) {\n            if (articleState[eventId] === true) {\n                listOfObjectsToDelete.push(eventId)\n            }\n        }\n        deleteEvent(\n            {\n                variables: {\n                    ids: listOfObjectsToDelete\n                },\n                refetchQueries: [{\n                    query: GET_EVENTS,\n                    variables: {\n                        filters: {\n                            me: false,\n                        }\n                    }\n                }],\n            }\n        );\n    };\n    const handleNo = () => {\n        setOpenModal(false);\n    };\n\n    const redirectToManage = () => {\n        if (history) {\n            history.push('/manage/')\n        }\n    };\n\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n\n    const bodyConfirmDelete = (\n        <div style={modalStyle} className={classes.paper}>\n            <Typography>Are you sure you want to delete?</Typography>\n            <div className={classes.confirmButtons}>\n                <Button\n                    onClick={handleNo}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    No\n      </Button>\n                <Button\n                    onClick={handleYes}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    Yes\n      </Button>\n            </div>\n        </div>\n    );\n\n\n    const handleDeleteButton = () => {\n        setOpenModal(true);\n    };\n\n\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, id: string) => {\n        setArticleStateState({ ...articleState, [id]: event.target.checked });\n    };\n\n    let checkIfDisableButton = true;\n\n    for (const eventId in articleState) {\n        if (articleState[eventId] === true) {\n            checkIfDisableButton = false\n        }\n    }\n\n    return (\n        <div className={classes.container} >\n            <Button\n                onClick={redirectToManage}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"medium\"\n                className={classes.buttonBack}\n                startIcon={< ArrowBackIcon />}\n            >\n                Back\n      </Button>\n            {\n                !data || loading ?\n                    <CircularIndeterminate />\n                    :\n                    <div className={classes.checkboxes}>\n                        {alert.internalBackendError ? (\n                            <Alert severity=\"error\">Ooops! Something went wrong, try again later.</Alert>\n                        ) : null}\n                        {alert.pleaseLogIn ? (\n                            <Alert severity=\"warning\">Please log in to delete event.</Alert>\n                        ) : null}\n                        {alert.eventDeleted ? (\n                            <Alert severity=\"success\">Event/s has been deleted.</Alert>\n                        ) : null}\n\n                        <FormGroup>\n                            {\n                                articleState ?\n                                    data?.events?.map((event) => {\n                                        return (\n                                            <FormControlLabel key={event.id}\n                                                control={\n                                                    <Checkbox\n                                                        checked={articleState[event.id]}\n                                                        onChange={(e) => handleChange(e, event.id)}\n                                                        name={event.id}\n                                                        color=\"primary\"\n                                                    />\n                                                }\n\n                                                label={\n                                                    <div className={classes.articlesFormLabel}>\n                                                        <div className={classes.date}>\n                                                            {format(new Date(event.date), 'dd/MM/yyyy')}\n                                                        </div>\n                                                        <div>\n                                                            {event.location}\n                                                        </div>\n                                                    </div>\n                                                }\n\n                                            />\n                                        )\n                                    }) : null\n                            }\n                        </FormGroup>\n                    </div>}\n            <Button\n                onClick={handleDeleteButton}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                className={classes.button}\n                startIcon={<DeleteIcon />}\n                disabled={data?.events?.length < 1 || checkIfDisableButton}\n            >\n                DELETE\n      </Button>\n            <Modal\n                open={openModal}\n                onClose={handleModalClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {bodyConfirmDelete}\n            </Modal>\n        </div>\n    )\n};\n\nexport default withRouter(DeleteEvent);","/Users/joannanapora/forest-run/src/pages/events/event-card/event.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/create-post/create-post.container.tsx",[],"/Users/joannanapora/forest-run/src/pages/events/event-list/event-list.component.tsx",["529"],"import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport UpcomingEvent from '../event-card/event.component';\nimport { Grid, Switch, Paper, Fade, Button, IconButton, Typography } from '@material-ui/core';\n\nimport { mapWhenToOptions } from '../../../models/when.enum';\nimport { useEventListStyles } from './event-list.styles';\n\nimport { format } from 'date-fns';\n\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SortIcon from '@material-ui/icons/Sort';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { selectCurrentUser } from '../../../store-redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { IUser } from '../../../store-redux';\nimport { connect } from 'react-redux';\n\nimport { GET_EVENTS, ASSIGN_TO_EVENT, UNASSIGN_TO_EVENT } from '../../../grapQL';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport CircularIndeterminate from '../../../shared/spinner.component';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\n\ninterface IAlerts {\n    pleaseLogin: boolean;\n    joined: boolean;\n    left: boolean;\n    internalBackendError: boolean;\n}\n\ninterface IFilters {\n    distance: string;\n    joined: boolean;\n    popular: string;\n}\n\nconst EventList = ({ user }: { user: IUser }) => {\n    const classes = useEventListStyles();\n    const [checked, setChecked]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [isClicked, setIsClicked]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [filter, setFilter]: [IFilters, Dispatch<SetStateAction<IFilters>>] = useState({\n        distance: \"\",\n        popular: \"\",\n        joined: false,\n    });\n\n    useEffect(() => {\n        refetch()\n    }, [filter])\n\n\n    const [alert, setAlert]: [IAlerts, Dispatch<SetStateAction<IAlerts>>] = useState({\n        pleaseLogin: false,\n        joined: false,\n        left: false,\n        internalBackendError: false,\n    });\n\n    let { loading, error, data, refetch } = useQuery(GET_EVENTS, {\n        variables: {\n            filters: {\n                me: false,\n                participateCounter: filter.popular,\n                distance: filter.distance,\n                joined: filter.joined,\n            }\n        },\n    },\n    );\n\n    const [assignToEvent] = useMutation(ASSIGN_TO_EVENT, {\n        onCompleted: () => {\n            refetch();\n            setAlert({ ...alert, joined: true, left: false })\n\n        },\n        onError: (error) => {\n            if ((error.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogin: true })\n            }\n            if ((error.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true })\n            }\n        }\n    });\n\n    const [unassignToEvent] = useMutation(UNASSIGN_TO_EVENT, {\n        onCompleted: () => {\n            refetch();\n            setAlert({ ...alert, left: true, joined: false })\n        },\n        onError: (error) => {\n            if ((error.graphQLErrors[0].message) === \"Cannot read property 'sub' of undefined\") {\n                setAlert({ ...alert, pleaseLogin: true })\n            }\n            if ((error.graphQLErrors[0].message as any).statusCode === 500) {\n                setAlert({ ...alert, internalBackendError: true })\n            }\n        }\n    });\n\n    if (error) {\n        return (\n            <div className={classes.alert}><Alert severity=\"error\">Ooops! Try again later.</Alert></div>)\n    };\n\n    const handleChange = (prev: React.ChangeEvent<HTMLInputElement>) => {\n        setChecked((prev) => !prev);\n        setAlert({\n            ...alert,\n            pleaseLogin: false,\n            joined: false,\n            left: false,\n        })\n    };\n\n    const handleDistance = () => {\n\n        setFilter({\n            distance: filter.distance !== \"DESC\" ? \"DESC\" : \"ASC\",\n            popular: undefined,\n            joined: null\n        });\n        setAlert({\n            ...alert,\n            pleaseLogin: false,\n            joined: false,\n            left: false,\n        })\n    };\n\n    const handlePopular = () => {\n        setFilter({\n            popular: filter.popular !== \"DESC\" ? \"DESC\" : \"ASC\",\n            distance: undefined,\n            joined: null,\n        });\n        setAlert({\n            ...alert,\n            pleaseLogin: false,\n            joined: false,\n            left: false,\n        })\n    };\n\n    const handleJoined = () => {\n        setFilter({\n            ...filter, joined: !filter.joined,\n        });\n        setAlert({\n            ...alert,\n            pleaseLogin: false,\n            joined: false,\n            left: false,\n        })\n    };\n\n\n    const handleClickToJoin = (eventId, isAssigned) => {\n        setIsClicked(!isClicked);\n\n        if (!isAssigned) {\n            assignToEvent(\n                {\n                    variables: {\n                        eventId: eventId\n                    },\n                },\n            );\n        }\n        else {\n            unassignToEvent(\n                {\n                    variables: {\n                        eventId: eventId\n                    },\n                }\n            );\n        }\n\n    }\n\n    return (\n        <div className={classes.eventListPage}>\n            <div className={classes.rootfilters}>\n                <FormControlLabel\n                    control={<Switch color=\"primary\"\n                        checked={checked} onChange={handleChange} />}\n                    label={checked ? '' : 'filters'}\n                />\n                <div className={classes.container}>\n                    <Fade in={checked}>\n                        <Paper elevation={4} className={classes.paper}>\n                            <Button\n                                variant=\"contained\"\n                                color={filter.distance ? \"primary\" : \"secondary\"}\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleDistance}\n                            >\n                                Miles\n      </Button>\n                            <Button\n                                variant=\"contained\"\n                                color={filter.popular ? \"primary\" : \"secondary\"}\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handlePopular}\n                            >\n                                Popular\n      </Button>\n                            <Button\n                                variant=\"contained\"\n                                color={filter.joined ? \"primary\" : \"secondary\"}\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={filter.joined ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n                                onClick={handleJoined}\n                            >\n                                Joined\n                            </Button>\n                        </Paper>\n                    </Fade>\n                </div>\n            </div>\n            {\n                !data || loading ?\n                    <CircularIndeterminate />\n                    :\n                    <Grid item xs={12}>\n                        {\n                            alert.pleaseLogin ?\n                                <div className={classes.mutationAlert}><Alert severity=\"warning\">Please login to join the event.</Alert></div>\n                                : null\n                        }\n                        {\n                            alert.joined ?\n                                <div className={classes.mutationAlert}><Alert severity=\"success\">You have joined the event.</Alert></div>\n                                : null\n                        }\n                        {\n                            alert.left ?\n                                <div className={classes.mutationAlert}><Alert severity=\"error\">You have left the event.</Alert></div>\n                                : null\n                        }\n                        <Grid container justify=\"space-evenly\" spacing={2}>\n                            {\n                                data?.events.length < 1 && filter.joined ?\n                                    <div className={classes.mutationAlert}><Typography>There are no events here.</Typography></div>\n                                    :\n                                    null\n                            }\n                            {\n                                data?.events.length < 1 && !filter.joined ?\n                                    <div className={classes.mutationAlert}><Typography>There are no upcoming events.</Typography></div>\n                                    :\n                                    null\n                            }\n                            {\n                                data?.events?.map((event) => {\n                                    return (<Grid key={event.id} item>\n                                        <UpcomingEvent\n                                            location={event.location}\n                                            distance={event.distance}\n                                            image=\"https://cdn.dribbble.com/users/1016207/screenshots/6380353/58.jpg?compress=1&resize=400x300\"\n                                            description={event.description}\n                                            date={format(new Date(event.date), 'dd/MM/yyyy')}\n                                            organizerName={event.organizerName}\n                                            organizerPhoneNumber={event.organizerPhoneNumber}\n                                            meetingPoint={event.meetingPoint}\n                                            time={new Date(Number(event.time)).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                                            when={mapWhenToOptions(event.when)}\n                                            counter={event.participateCounter}\n                                            action={event.isAssign ?\n                                                <IconButton onClick={() => handleClickToJoin(event.id, event.isAssign)} aria-label=\"settings\">\n                                                    < PeopleAltIcon color='primary' />\n                                                </IconButton>\n                                                :\n                                                <IconButton onClick={() => handleClickToJoin(event.id, event.isAssign)} aria-label=\"settings\">\n                                                    < PersonAddIcon color='secondary' />\n                                                </IconButton>}\n                                        />\n                                        {event.isAssign ?\n                                            isClicked : !isClicked}\n                                    </Grid>\n                                    )\n                                })\n                            }\n                        </Grid>\n                    </Grid>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    user: selectCurrentUser,\n});\n\n\nexport default connect(\n    mapStateToProps,\n    null)\n    (EventList);","/Users/joannanapora/forest-run/src/pages/landing/timelines/timelines.component.tsx",[],"/Users/joannanapora/forest-run/src/store-redux/user/user.types.ts",[],"/Users/joannanapora/forest-run/src/store-redux/index.ts",[],"/Users/joannanapora/forest-run/src/pages/landing/timelines/timelines.styles.ts",[],"/Users/joannanapora/forest-run/src/grapQL/user/user.mutation.ts",[],"/Users/joannanapora/forest-run/src/shared/spinner.component.tsx",[],"/Users/joannanapora/forest-run/src/store-redux/user/user.actions.ts",[],"/Users/joannanapora/forest-run/src/grapQL/index.ts",[],"/Users/joannanapora/forest-run/src/grapQL/event/event.query.ts",[],"/Users/joannanapora/forest-run/src/grapQL/event/event.mutation.ts",[],"/Users/joannanapora/forest-run/src/grapQL/post/post.query.tsx",[],"/Users/joannanapora/forest-run/src/grapQL/user/user.graphql.ts",[],"/Users/joannanapora/forest-run/src/grapQL/post/post.mutation.ts",[],"/Users/joannanapora/forest-run/src/pages/events/event-list/event-list.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/create-post/create-post.styles.ts",[],"/Users/joannanapora/forest-run/src/models/when.enum.ts",[],"/Users/joannanapora/forest-run/src/axios/image.api.ts",[],"/Users/joannanapora/forest-run/src/pages/events/event-card/event.styles.tsx",[],"/Users/joannanapora/forest-run/src/shared/spinner-button.component.tsx",["530"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        wrapper: {\n            margin: theme.spacing(2),\n            position: 'relative',\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        buttonProgress: {\n            color: green[500],\n            position: 'absolute',\n            top: '60%',\n            left: '50%',\n            marginTop: -12,\n            marginLeft: -12,\n        },\n    }),\n);\n\nconst SpinnerButton = ({ buttonLabel, onClick, loading, ...props }) => {\n    const classes = useStyles();\n    const timer = React.useRef<number>();\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(timer.current);\n        };\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                {<Button\n                    {...props}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    onClick={onClick}\n                >\n                    {buttonLabel}\n                </Button>}\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n        </div>\n    );\n};\n\nexport default SpinnerButton;","/Users/joannanapora/forest-run/src/pages/login/sign-up/sign-up.container.tsx",[],"/Users/joannanapora/forest-run/src/pages/login/sign-in/sign-in.container.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/delete-event/delete-event.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/notice-board/articles/notice-board.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/create-event/create-event.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/delete-post/delete-post.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/manage.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/donate/donate.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/notice-board/search-post/search-post.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.component.tsx",["531","532"],"/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.component.tsx",[],"/Users/joannanapora/forest-run/src/stripe/stripe.component.tsx",[],"/Users/joannanapora/forest-run/src/pages/login/sign-in/sign-in.styles.ts",[],"/Users/joannanapora/forest-run/src/shared/email-validation.ts",["533","534"],"export const validateEmail = (email: string): boolean => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n};","/Users/joannanapora/forest-run/src/pages/login/sign-up/sign-up.styles.ts",[],"/Users/joannanapora/forest-run/src/shared/password-validation.ts",[],"/Users/joannanapora/forest-run/src/nav/user-area/user-area.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/notice-board/search-post/search-post.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.styles.ts",[],"/Users/joannanapora/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/index.tsx",[],["535","536"],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/reportWebVitals.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/store.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/App.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/root-reducer.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/App.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/menu-drawer/menu-drawer.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.reducer.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/nav/nav.reducer.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/menu-drawer/menu-drawer.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.selectors.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/nav/nav.selectors.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/user-area/user-area.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/donate/donate.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/create-event.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-post/create-post.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-event/delete-event.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/articles/notice-board.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-post/delete-post.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-list/event-list.component.tsx",["537"],"import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport UpcomingEvent from \"../event-card/event.component\";\nimport {\n  Grid,\n  Switch,\n  Paper,\n  Fade,\n  Button,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { mapWhenToOptions } from \"../../../models/when.enum\";\nimport { useEventListStyles } from \"./event-list.styles\";\n\nimport { format } from \"date-fns\";\n\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { selectCurrentUser } from \"../../../store-redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { IUser } from \"../../../store-redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  GET_EVENTS,\n  ASSIGN_TO_EVENT,\n  UNASSIGN_TO_EVENT,\n} from \"../../../grapQL\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport CircularIndeterminate from \"../../../shared/spinner.component\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\ninterface IAlerts {\n  pleaseLogin: boolean;\n  joined: boolean;\n  left: boolean;\n  internalBackendError: boolean;\n}\n\ninterface IFilters {\n  distance: string;\n  joined: boolean;\n  popular: string;\n}\n\nconst EventList = ({ user }: { user: IUser }) => {\n  const classes = useEventListStyles();\n  const [checked, setChecked]: [\n    boolean,\n    Dispatch<SetStateAction<boolean>>\n  ] = useState(false);\n  const [isClicked, setIsClicked]: [\n    boolean,\n    Dispatch<SetStateAction<boolean>>\n  ] = useState(false);\n  const [filter, setFilter]: [\n    IFilters,\n    Dispatch<SetStateAction<IFilters>>\n  ] = useState({\n    distance: \"\",\n    popular: \"\",\n    joined: false,\n  });\n\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  const [alert, setAlert]: [\n    IAlerts,\n    Dispatch<SetStateAction<IAlerts>>\n  ] = useState({\n    pleaseLogin: false,\n    joined: false,\n    left: false,\n    internalBackendError: false,\n  });\n\n  let { loading, error, data, refetch } = useQuery(GET_EVENTS, {\n    variables: {\n      filters: {\n        me: false,\n        participateCounter: filter.popular,\n        distance: filter.distance,\n        joined: filter.joined,\n      },\n    },\n  });\n\n  const [assignToEvent] = useMutation(ASSIGN_TO_EVENT, {\n    onCompleted: () => {\n      refetch();\n      setAlert({ ...alert, joined: true, left: false });\n    },\n    onError: (error) => {\n      if (\n        error.graphQLErrors[0].message ===\n        \"Cannot read property 'sub' of undefined\"\n      ) {\n        setAlert({ ...alert, pleaseLogin: true });\n      }\n      if ((error.graphQLErrors[0].message as any).statusCode === 500) {\n        setAlert({ ...alert, internalBackendError: true });\n      }\n    },\n  });\n\n  const [unassignToEvent] = useMutation(UNASSIGN_TO_EVENT, {\n    onCompleted: () => {\n      refetch();\n      setAlert({ ...alert, left: true, joined: false });\n    },\n    onError: (error) => {\n      if (\n        error.graphQLErrors[0].message ===\n        \"Cannot read property 'sub' of undefined\"\n      ) {\n        setAlert({ ...alert, pleaseLogin: true });\n      }\n      if ((error.graphQLErrors[0].message as any).statusCode === 500) {\n        setAlert({ ...alert, internalBackendError: true });\n      }\n    },\n  });\n\n  if (error) {\n    return (\n      <div className={classes.alert}>\n        <Alert severity=\"error\">Ooops! Try again later.</Alert>\n      </div>\n    );\n  }\n\n  const handleChange = (prev: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked((prev) => !prev);\n    setAlert({\n      ...alert,\n      pleaseLogin: false,\n      joined: false,\n      left: false,\n    });\n  };\n\n  const handleDistance = () => {\n    setFilter({\n      distance: filter.distance !== \"DESC\" ? \"DESC\" : \"ASC\",\n      popular: undefined,\n      joined: null,\n    });\n    setAlert({\n      ...alert,\n      pleaseLogin: false,\n      joined: false,\n      left: false,\n    });\n  };\n\n  const handlePopular = () => {\n    setFilter({\n      popular: filter.popular !== \"DESC\" ? \"DESC\" : \"ASC\",\n      distance: undefined,\n      joined: null,\n    });\n    setAlert({\n      ...alert,\n      pleaseLogin: false,\n      joined: false,\n      left: false,\n    });\n  };\n\n  const handleJoined = () => {\n    setFilter({\n      ...filter,\n      joined: !filter.joined,\n    });\n    setAlert({\n      ...alert,\n      pleaseLogin: false,\n      joined: false,\n      left: false,\n    });\n  };\n\n  const handleClickToJoin = (eventId, isAssigned) => {\n    setIsClicked(!isClicked);\n\n    if (!isAssigned) {\n      assignToEvent({\n        variables: {\n          eventId: eventId,\n        },\n      });\n    } else {\n      unassignToEvent({\n        variables: {\n          eventId: eventId,\n        },\n      });\n    }\n  };\n\n  return (\n    <div className={classes.eventListPage}>\n      <div className={classes.rootfilters}>\n        <FormControlLabel\n          control={\n            <Switch color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={checked ? \"\" : \"filters\"}\n        />\n        <div className={classes.container}>\n          <Fade in={checked}>\n            <Paper elevation={4} className={classes.paper}>\n              <Button\n                variant=\"contained\"\n                color={filter.distance ? \"primary\" : \"secondary\"}\n                size=\"small\"\n                className={classes.button}\n                startIcon={<SortIcon />}\n                onClick={handleDistance}\n              >\n                Miles\n              </Button>\n              <Button\n                variant=\"contained\"\n                color={filter.popular ? \"primary\" : \"secondary\"}\n                size=\"small\"\n                className={classes.button}\n                startIcon={<SortIcon />}\n                onClick={handlePopular}\n              >\n                Popular\n              </Button>\n              <Button\n                variant=\"contained\"\n                color={filter.joined ? \"primary\" : \"secondary\"}\n                size=\"small\"\n                className={classes.button}\n                startIcon={\n                  filter.joined ? (\n                    <CheckBoxIcon />\n                  ) : (\n                    <CheckBoxOutlineBlankIcon />\n                  )\n                }\n                onClick={handleJoined}\n              >\n                Joined\n              </Button>\n            </Paper>\n          </Fade>\n        </div>\n      </div>\n      {!data || loading ? (\n        <CircularIndeterminate />\n      ) : (\n        <Grid item xs={12}>\n          {alert.pleaseLogin ? (\n            <div className={classes.mutationAlert}>\n              <Alert severity=\"warning\">Please login to join the event.</Alert>\n            </div>\n          ) : null}\n          {alert.joined ? (\n            <div className={classes.mutationAlert}>\n              <Alert severity=\"success\">You have joined the event.</Alert>\n            </div>\n          ) : null}\n          {alert.left ? (\n            <div className={classes.mutationAlert}>\n              <Alert severity=\"error\">You have left the event.</Alert>\n            </div>\n          ) : null}\n          <Grid container justify=\"space-evenly\" spacing={2}>\n            {data?.events.length < 1 && filter.joined ? (\n              <div className={classes.mutationAlert}>\n                <Typography>There are no events here.</Typography>\n              </div>\n            ) : null}\n            {data?.events.length < 1 && !filter.joined ? (\n              <div className={classes.mutationAlert}>\n                <Typography>There are no upcoming events.</Typography>\n              </div>\n            ) : null}\n            {data?.events?.map((event) => {\n              return (\n                <Grid key={event.id} item>\n                  <UpcomingEvent\n                    location={event.location}\n                    distance={event.distance}\n                    image=\"https://cdn.dribbble.com/users/1016207/screenshots/6380353/58.jpg?compress=1&resize=400x300\"\n                    description={event.description}\n                    date={format(new Date(event.date), \"dd/MM/yyyy\")}\n                    organizerName={event.organizerName}\n                    organizerPhoneNumber={event.organizerPhoneNumber}\n                    meetingPoint={event.meetingPoint}\n                    time={new Date(Number(event.time)).toLocaleTimeString([], {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                    })}\n                    when={mapWhenToOptions(event.when)}\n                    counter={event.participateCounter}\n                    action={\n                      event.isAssign ? (\n                        <IconButton\n                          onClick={() =>\n                            handleClickToJoin(event.id, event.isAssign)\n                          }\n                          aria-label=\"settings\"\n                        >\n                          <PeopleAltIcon color=\"primary\" />\n                        </IconButton>\n                      ) : (\n                        <IconButton\n                          onClick={() =>\n                            handleClickToJoin(event.id, event.isAssign)\n                          }\n                          aria-label=\"settings\"\n                        >\n                          <PersonAddIcon color=\"secondary\" />\n                        </IconButton>\n                      )\n                    }\n                  />\n                  {event.isAssign ? isClicked : !isClicked}\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  user: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps, null)(EventList);\n","/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-card/event.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.types.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/index.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/nav/user-area/user-area.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/user/user.mutation.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/store-redux/user/user.actions.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-card/event.styles.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/events/event-list/event-list.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-event/delete-event.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/articles/notice-board.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/delete-post/delete-post.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-post/create-post.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/models/when.enum.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/axios/image.api.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/donate/donate.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/create-event.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/spinner-button.component.tsx",["538"],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/spinner.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/post/post.query.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-up/sign-up.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/search-post/search-post.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in/sign-in.container.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/stripe/stripe.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/index.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/password-validation.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/shared/email-validation.ts",["539","540"],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-in/sign-in.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/login/sign-up/sign-up.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/notice-board/search-post/search-post.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-details/event-info.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-image/event-image.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/create-event/new-event/event-meetpoint/event-details.styles.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/user/user.graphql.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/post/post.mutation.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/event/event.mutation.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/grapQL/event/event.query.ts",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/manage/manage.component.tsx",[],"/Users/joannanapora/Desktop/programming/forest/forest-run/src/pages/manage/manage/manage.styles.ts",[],{"ruleId":"541","replacedBy":"542"},{"ruleId":"543","replacedBy":"544"},{"ruleId":"545","severity":1,"message":"546","line":43,"column":8,"nodeType":"547","endLine":43,"endColumn":10,"suggestions":"548"},{"ruleId":"549","severity":1,"message":"550","line":149,"column":15,"nodeType":"551","messageId":"552","endLine":149,"endColumn":22},{"ruleId":"545","severity":1,"message":"546","line":44,"column":8,"nodeType":"547","endLine":44,"endColumn":10,"suggestions":"553"},{"ruleId":"545","severity":1,"message":"546","line":55,"column":8,"nodeType":"547","endLine":55,"endColumn":16,"suggestions":"554"},{"ruleId":"545","severity":1,"message":"555","line":35,"column":32,"nodeType":"551","endLine":35,"endColumn":39},{"ruleId":"549","severity":1,"message":"556","line":5,"column":10,"nodeType":"551","messageId":"552","endLine":5,"endColumn":16},{"ruleId":"549","severity":1,"message":"557","line":5,"column":18,"nodeType":"551","messageId":"552","endLine":5,"endColumn":29},{"ruleId":"558","severity":1,"message":"559","line":2,"column":26,"nodeType":"560","messageId":"561","endLine":2,"endColumn":27,"suggestions":"562"},{"ruleId":"558","severity":1,"message":"559","line":2,"column":51,"nodeType":"560","messageId":"561","endLine":2,"endColumn":52,"suggestions":"563"},{"ruleId":"541","replacedBy":"564"},{"ruleId":"543","replacedBy":"565"},{"ruleId":"545","severity":1,"message":"546","line":75,"column":6,"nodeType":"547","endLine":75,"endColumn":8,"suggestions":"566"},{"ruleId":"545","severity":1,"message":"555","line":35,"column":32,"nodeType":"551","endLine":35,"endColumn":39},{"ruleId":"558","severity":1,"message":"559","line":2,"column":26,"nodeType":"560","messageId":"561","endLine":2,"endColumn":27,"suggestions":"567"},{"ruleId":"558","severity":1,"message":"559","line":2,"column":51,"nodeType":"560","messageId":"561","endLine":2,"endColumn":52,"suggestions":"568"},"no-native-reassign",["569"],"no-negated-in-lhs",["570"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["571"],"@typescript-eslint/no-unused-vars","'newDate' is assigned a value but never used.","Identifier","unusedVar",["572"],["573"],"The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","'Button' is defined but never used.","'FormControl' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["574","575"],["576","577"],["569"],["570"],["578"],["579","580"],["581","582"],"no-global-assign","no-unsafe-negation",{"desc":"583","fix":"584"},{"desc":"583","fix":"585"},{"desc":"586","fix":"587"},{"messageId":"588","fix":"589","desc":"590"},{"messageId":"591","fix":"592","desc":"593"},{"messageId":"588","fix":"594","desc":"590"},{"messageId":"591","fix":"595","desc":"593"},{"desc":"583","fix":"596"},{"messageId":"588","fix":"597","desc":"590"},{"messageId":"591","fix":"598","desc":"593"},{"messageId":"588","fix":"599","desc":"590"},{"messageId":"591","fix":"600","desc":"593"},"Update the dependencies array to be: [refetch]",{"range":"601","text":"602"},{"range":"603","text":"602"},"Update the dependencies array to be: [filter, refetch]",{"range":"604","text":"605"},"removeEscape",{"range":"606","text":"607"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"608","text":"609"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"610","text":"607"},{"range":"611","text":"609"},{"range":"612","text":"602"},{"range":"613","text":"607"},{"range":"614","text":"609"},{"range":"615","text":"607"},{"range":"616","text":"609"},[1524,1526],"[refetch]",[1533,1535],[1953,1961],"[filter, refetch]",[84,85],"",[84,84],"\\",[109,110],[109,109],[1967,1969],[84,85],[84,84],[109,110],[109,109]]