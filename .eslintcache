[{"/Users/porczi/forest/reactapp-teamfinder/src/index.tsx":"1","/Users/porczi/forest/reactapp-teamfinder/src/reportWebVitals.ts":"2","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/store.ts":"3","/Users/porczi/forest/reactapp-teamfinder/src/App.tsx":"4","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/root-reducer.ts":"5","/Users/porczi/forest/reactapp-teamfinder/src/App.styles.ts":"6","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.reducer.ts":"7","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.reducer.ts":"8","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.styles.ts":"9","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.selectors.ts":"10","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.selectors.ts":"11","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.component.tsx":"12","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx":"13","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.component.tsx":"14","/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.component.tsx":"15","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.component.tsx":"16","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.component.tsx":"17","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.component.tsx":"18","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.component.tsx":"19","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.types.ts":"20","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.styles.ts":"21","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.styles.ts":"22","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts":"23","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.styles.ts":"24","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.styles.ts":"25","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.styles.tsx":"26","/Users/porczi/forest/reactapp-teamfinder/src/stripe/stripe.component.tsx":"27","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.component.tsx":"28","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.component.tsx":"29","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.component.tsx":"30","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.component.tsx":"31","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.actions.ts":"32","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.styles.ts":"33","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.styles.ts":"34","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.styles.ts":"35","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.styles.ts":"36","/Users/porczi/forest/reactapp-teamfinder/src/shared/password-validation.ts":"37","/Users/porczi/forest/reactapp-teamfinder/src/shared/email-validation.ts":"38","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/index.ts":"39","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.graphql.ts":"40","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.styles.ts":"41","/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.styles.ts":"42","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.styles.tsx":"43","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.component.tsx":"44","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.styles.ts":"45","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.query.tsx":"46","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.mutation.ts":"47","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/index.ts":"48","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.component.tsx":"49","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.styles.ts":"50","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner-button.component.tsx":"51","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.container.tsx":"52","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.container.tsx":"53","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.styles.ts":"54","/Users/porczi/forest/reactapp-teamfinder/src/autocomplete.tsx":"55","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.component.tsx":"56","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.styles.ts":"57","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.mutation.ts":"58","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.container.tsx":"59","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.mutation.ts":"60","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.query.ts":"61","/Users/porczi/forest/reactapp-teamfinder/src/models/when.enum.ts":"62"},{"size":1277,"mtime":1612350575753,"results":"63","hashOfConfig":"64"},{"size":425,"mtime":1612188791632,"results":"65","hashOfConfig":"64"},{"size":307,"mtime":1612188791637,"results":"66","hashOfConfig":"64"},{"size":300,"mtime":1612350446295,"results":"67","hashOfConfig":"64"},{"size":461,"mtime":1612188791636,"results":"68","hashOfConfig":"64"},{"size":164,"mtime":1612188791510,"results":"69","hashOfConfig":"64"},{"size":527,"mtime":1612267861851,"results":"70","hashOfConfig":"64"},{"size":965,"mtime":1612267867959,"results":"71","hashOfConfig":"64"},{"size":2473,"mtime":1612293416062,"results":"72","hashOfConfig":"64"},{"size":224,"mtime":1612267846896,"results":"73","hashOfConfig":"64"},{"size":268,"mtime":1612267437361,"results":"74","hashOfConfig":"64"},{"size":3091,"mtime":1612536038930,"results":"75","hashOfConfig":"64"},{"size":953,"mtime":1612188791625,"results":"76","hashOfConfig":"64"},{"size":5748,"mtime":1612537592497,"results":"77","hashOfConfig":"64"},{"size":3917,"mtime":1612519606345,"results":"78","hashOfConfig":"64"},{"size":4391,"mtime":1612350964855,"results":"79","hashOfConfig":"64"},{"size":7005,"mtime":1612365065308,"results":"80","hashOfConfig":"64"},{"size":8574,"mtime":1612434015361,"results":"81","hashOfConfig":"64"},{"size":5675,"mtime":1612222882167,"results":"82","hashOfConfig":"64"},{"size":76,"mtime":1612188791639,"results":"83","hashOfConfig":"64"},{"size":1136,"mtime":1612370600950,"results":"84","hashOfConfig":"64"},{"size":1511,"mtime":1612522412963,"results":"85","hashOfConfig":"64"},{"size":1709,"mtime":1612523736173,"results":"86","hashOfConfig":"64"},{"size":2022,"mtime":1612188791631,"results":"87","hashOfConfig":"64"},{"size":2536,"mtime":1612188791630,"results":"88","hashOfConfig":"64"},{"size":1161,"mtime":1612370637713,"results":"89","hashOfConfig":"64"},{"size":772,"mtime":1612188791640,"results":"90","hashOfConfig":"64"},{"size":4542,"mtime":1612523466597,"results":"91","hashOfConfig":"64"},{"size":1521,"mtime":1612448175242,"results":"92","hashOfConfig":"64"},{"size":5264,"mtime":1612461003046,"results":"93","hashOfConfig":"64"},{"size":10969,"mtime":1612368158580,"results":"94","hashOfConfig":"64"},{"size":180,"mtime":1612188791638,"results":"95","hashOfConfig":"64"},{"size":431,"mtime":1612368557852,"results":"96","hashOfConfig":"64"},{"size":696,"mtime":1612368541016,"results":"97","hashOfConfig":"64"},{"size":518,"mtime":1612188791623,"results":"98","hashOfConfig":"64"},{"size":984,"mtime":1612457756490,"results":"99","hashOfConfig":"64"},{"size":197,"mtime":1612188791634,"results":"100","hashOfConfig":"64"},{"size":280,"mtime":1612188791633,"results":"101","hashOfConfig":"64"},{"size":226,"mtime":1612451765921,"results":"102","hashOfConfig":"64"},{"size":587,"mtime":1612191099930,"results":"103","hashOfConfig":"64"},{"size":1910,"mtime":1612535977798,"results":"104","hashOfConfig":"64"},{"size":222,"mtime":1612189945108,"results":"105","hashOfConfig":"64"},{"size":905,"mtime":1612188791618,"results":"106","hashOfConfig":"64"},{"size":575,"mtime":1612535446298,"results":"107","hashOfConfig":"64"},{"size":414,"mtime":1612535983926,"results":"108","hashOfConfig":"64"},{"size":271,"mtime":1612220836140,"results":"109","hashOfConfig":"64"},{"size":357,"mtime":1612266303636,"results":"110","hashOfConfig":"64"},{"size":108,"mtime":1612267844999,"results":"111","hashOfConfig":"64"},{"size":348,"mtime":1612188791634,"results":"112","hashOfConfig":"64"},{"size":312,"mtime":1612188791635,"results":"113","hashOfConfig":"64"},{"size":1652,"mtime":1612475377807,"results":"114","hashOfConfig":"64"},{"size":6638,"mtime":1612449434889,"results":"115","hashOfConfig":"64"},{"size":4794,"mtime":1612523466631,"results":"116","hashOfConfig":"64"},{"size":709,"mtime":1612451533391,"results":"117","hashOfConfig":"64"},{"size":2993,"mtime":1612519550557,"results":"118","hashOfConfig":"64"},{"size":1072,"mtime":1612449317011,"results":"119","hashOfConfig":"64"},{"size":627,"mtime":1612365032579,"results":"120","hashOfConfig":"64"},{"size":247,"mtime":1612432287685,"results":"121","hashOfConfig":"64"},{"size":14865,"mtime":1612523324058,"results":"122","hashOfConfig":"64"},{"size":549,"mtime":1612460186863,"results":"123","hashOfConfig":"64"},{"size":247,"mtime":1612350174430,"results":"124","hashOfConfig":"64"},{"size":1554,"mtime":1612459624813,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"i99r7u",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"128"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"/Users/porczi/forest/reactapp-teamfinder/src/index.tsx",[],["261","262"],"/Users/porczi/forest/reactapp-teamfinder/src/reportWebVitals.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/store.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/App.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/root-reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/App.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.selectors.ts",["263"],"import { createSelector } from 'reselect';\nimport { IUser } from './user.reducer';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n    [selectUser],\n    (user) => user.currentUser);","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.selectors.ts",["264","265"],"import { NavigationTwoTone } from '@material-ui/icons';\nimport { createSelector } from 'reselect';\nimport { DEFAULT_MAX_VERSION } from 'tls';\n\nconst selectNav = state => state.nav;\n\nexport const selectNavTabs = createSelector(\n    [selectNav],\n    nav => nav.navTabs\n)","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.component.tsx",["266","267","268"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.component.tsx",["269"],"import React from 'react';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { useTimeLinesStyles } from './timelines.styles';\nimport AppleIcon from '@material-ui/icons/Apple';\nimport { DirectionsRun, Search } from '@material-ui/icons';\nimport AutoCompletePlace from '../../../autocomplete';\n\nconst TimeLines = () => {\n    const classes = useTimeLinesStyles();\n\n    return (\n        <Timeline className={classes.root} align=\"alternate\">\n            <TimelineItem>\n                <TimelineOppositeContent>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color='primary' variant=\"outlined\">\n                        <LaptopMacIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Register\n            </Typography>\n                        <Typography>in Forest app</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\">\n                        <Search />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Find\n            </Typography>\n                        <Typography>or create running event!</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\" variant=\"outlined\">\n                        <DirectionsRun />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Take a part,\n            </Typography>\n                        <Typography>meet people and feel good.</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\">\n                        <AppleIcon />\n                    </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Remember about\n                        </Typography>\n                        <Typography>post-workout nutrition</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            {/* <AutoCompletePlace /> */}\n        </Timeline>\n    );\n};\n\nexport default TimeLines;\n","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.component.tsx",["270","271"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport UpcomingEvent from '../event-card/event.component';\nimport { useEventListStyles } from './event-list.styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Button } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\n\nconst events = [\n    {\n        id: 0,\n        date: '12 March 2021, 7;00 pm',\n        title: 'Hyde Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.parkgrandhydepark.co.uk/blog/wp-content/uploads/2017/08/Diana-Princess-of-Wales-Memorial-Fountain-Hyde-Park-London.jpg',\n        distance: 2,\n    },\n    {\n        id: 1,\n        date: '16 February 2021, 7;00 am',\n        title: 'Princess Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.towerhamlets.gov.uk/images_and_video/Leisure-and-culture/Parks-and-open-spaces/Mile_End_Park.png',\n        distance: 4,\n    },\n    {\n        id: 2,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.womensrunning.com/wp-content/uploads/sites/2/2016/09/nicest-people.jpg?resize=630%2C420',\n        distance: 10,\n    },\n    {\n        id: 3,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.twincities.com/wp-content/uploads/2019/06/jmp-mile-003.jpg',\n        distance: 4,\n    },\n    {\n        id: 4,\n        date: '16 February 2021, 7;00 am',\n        title: 'Princess Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://www.towerhamlets.gov.uk/images_and_video/Leisure-and-culture/Parks-and-open-spaces/Mile_End_Park.png',\n        distance: 14,\n    },\n    {\n        id: 5,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://news.sanfordhealth.org/wp-content/uploads/2018/03/group-run.jpg',\n        distance: 0.5,\n    },\n    {\n        id: 6,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://i.pinimg.com/564x/42/cc/62/42cc624233f1d0a1e3607bcc6bb52fca.jpg',\n        distance: 8,\n    },\n    {\n        id: 7,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://news.sanfordhealth.org/wp-content/uploads/2018/03/group-run.jpg',\n        distance: 4,\n    },\n    {\n        id: 8,\n        date: '29 March 2021, 6;00 pm',\n        title: 'Quenns Park',\n        description: 'We are group of 2 women and 2 men running in Hyde Park every day at 7pm. If you wanna join us you are more than welcome :)',\n        image: 'https://i.pinimg.com/564x/42/cc/62/42cc624233f1d0a1e3607bcc6bb52fca.jpg',\n        distance: 6,\n    },\n]\n\ninterface IAlerts {\n    somethingWentWrong: boolean\n    missedInputs: boolean\n}\n\n\nconst EventList = () => {\n\n    const [checked, setChecked]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [alert, setAlert]: [IAlerts, Dispatch<SetStateAction<IAlerts>>] = useState({\n        somethingWentWrong: false,\n        missedInputs: false,\n    })\n\n    const handleChange = (prev: React.ChangeEvent<HTMLInputElement>) => {\n        setChecked((prev) => !prev);\n    };\n\n    const handleSort = () => {\n\n    }\n    const classes = useEventListStyles();\n\n    return (\n        <div className={classes.eventListPage}>\n            <div className={classes.rootfilters}>\n                <FormControlLabel\n                    control={<Switch color=\"primary\"\n                        checked={checked} onChange={handleChange} />}\n                    label={checked ? '' : 'filters'}\n                />\n                <div className={classes.container}>\n                    <Fade in={checked}>\n                        <Paper elevation={4} className={classes.paper}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleSort}\n                            >\n                                Date\n      </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleSort}\n                            >\n                                Distance\n      </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<SortIcon />}\n                                onClick={handleSort}\n                            >\n                                Popular\n      </Button>\n                        </Paper>\n                    </Fade>\n                </div>\n            </div>\n            <Grid item xs={12}>\n                <Grid container justify=\"space-evenly\" spacing={2}>\n                    {\n                        events.map((event) => {\n                            return (<Grid key={event.id} item>\n                                <UpcomingEvent title={event.title} distance={event.distance} image={event.image} description={event.description} date={event.date} />\n                            </Grid>\n                            )\n                        })\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default EventList;\n","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.types.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.styles.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/stripe/stripe.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.component.tsx",["272","273"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.component.tsx",["274"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { FilledInput, FormControl, InputLabel, TextField } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { validateEmail } from '../../../shared/email-validation';\nimport { useSignInStyles } from './sign-in.styles';\nimport { LOGIN_USER } from '../../../grapQL';\nimport { useMutation } from '@apollo/react-hooks';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../../../store-redux';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\n\n\ninterface DetailsForm {\n    email: string;\n    password: string;\n}\n\ninterface ErrorAlerts {\n    wrongEmailPassword: boolean;\n    internalBackendError: boolean;\n}\n\nconst SignIn = ({ dispatchSetCurrentUser, history }) => {\n    const classes = useSignInStyles();\n    const [values, setValues]: [DetailsForm, Dispatch<SetStateAction<DetailsForm>>] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [errors, setErrors]: [ErrorAlerts, Dispatch<SetStateAction<ErrorAlerts>>] = useState({\n        wrongEmailPassword: false,\n        internalBackendError: false,\n    });\n\n    const [loginUser, { loading }] = useMutation(\n        LOGIN_USER, {\n        update(_, result) {\n            history.push('/upcoming-events');\n            const Token = result.data.login.accessToken;\n            localStorage.setItem('token', Token);\n            dispatchSetCurrentUser({\n                username: result.data.login.username\n            });\n        },\n        onError(e) {\n            if ((e.graphQLErrors[0].message as any).statusCode === 500) {\n                setErrors({ ...errors, internalBackendError: true });\n            }\n            if ((e.graphQLErrors[0].message as any).statusCode === 401) {\n                setErrors({ ...errors, wrongEmailPassword: true });\n            }\n        },\n        variables: {\n            email: values.email,\n            password: values.password\n        }\n    }\n    );\n\n    const handleChange = (prop: keyof DetailsForm) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setErrors({\n            wrongEmailPassword: false,\n            internalBackendError: false,\n        });\n    };\n\n    const handleSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n        loginUser();\n    };\n\n    const submitOnEnter = (event: React.KeyboardEvent<any>) => {\n        if (event.key === \"Enter\") {\n            loginUser();\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className={classes.form}>\n                <TextField value={values.email}\n                    disabled\n                    onKeyDown={submitOnEnter}\n                    onChange={handleChange('email')}\n                    className={classes.textfield}\n                    name='email'\n                    label=\"email\"\n                    variant=\"filled\" />\n                <FormControl className={classes.textfield} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        disabled\n                        onKeyDown={submitOnEnter}\n                        id=\"filled-adornment-password\"\n                        type={'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                    />\n                </FormControl>\n                <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n            </div>\n        )\n    }\n    if (!loading)\n        return (<div className={classes.form}>\n            <TextField value={values.email}\n                onKeyDown={submitOnEnter}\n                onChange={handleChange('email')}\n                className={classes.textfield}\n                name='email'\n                label=\"email\"\n                variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                    onKeyDown={submitOnEnter}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                />\n            </FormControl>\n            {\n                errors.internalBackendError ? (\n                    <Alert severity=\"error\">Something went wrong Try again later</Alert>\n                ) : null\n            }\n            {\n                errors.wrongEmailPassword ? (\n                    <Alert severity=\"error\">Email or Password is wrong</Alert>\n                ) : null\n            }\n            <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n\n        </div>);\n\n    return (\n        <></>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSetCurrentUser: (user) => dispatch(setCurrentUser(user))\n});\n\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps)\n    (SignIn));","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.component.tsx",["275"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { FilledInput, FormControl, IconButton, InputAdornment, InputLabel, TextField } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { withRouter } from \"react-router-dom\";\nimport { validateEmail } from '../../../shared/email-validation';\nimport { validatePassword } from '../../../shared/password-validation';\nimport Alert from '@material-ui/lab/Alert';\nimport { useSignUpStyles } from './sign-up.styles';\nimport {REGISTER_USER} from '../../../grapQL';\nimport {useMutation} from '@apollo/react-hooks';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\nimport { waitForDomChange } from '@testing-library/react';\n\n\ninterface DetailsForm {\n    email: string;\n    password: string;\n    confirmPassword: string;\n    showPassword: boolean;\n    username: string;\n}\n\ninterface ErrorAlerts {\n    wrongEmail: boolean;\n    wrongPassword: boolean;\n    passwordsDontMatch: boolean;\n    usernameExists: boolean;\n    emailExists: boolean;\n    usernameTooShort: boolean;\n    usernameTooLong: boolean;\n    userRegistered: boolean;\n}\n\n\nconst SignUp = () => {\n    const classes = useSignUpStyles();\n    const [values, setValues]:[DetailsForm, Dispatch<SetStateAction<DetailsForm>>] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        showPassword: false,\n        username: '',\n    });\n\n    const [notifications, setNotification]:[ErrorAlerts, Dispatch<SetStateAction<ErrorAlerts>>] = useState({\n        wrongEmail: false,\n        wrongPassword: false,\n        passwordsDontMatch: false,\n        usernameTooLong:false,\n        usernameTooShort:false,\n        usernameExists: false,\n        emailExists: false,\n        userRegistered: false,\n    });\n\n\n    const [addUser, {loading}] = useMutation(\n        REGISTER_USER, {\n            update(_, result){\n                setNotification({...notifications, userRegistered: true});\n                clearAllInputs();\n            },\n            onError(e) {\n                if ((e.graphQLErrors[0].message as any).statusCode === 409) {\n                    setNotification({...notifications, usernameExists: true});\n                }\n                        },\n            variables: {\n                username: values.username,\n                email: values.email,\n                password: values.password\n            }\n        }\n    );\n\n    const clearAllInputs = (): void => {\n        setValues({\n            email: '',\n            password: '',\n            confirmPassword: '',\n            showPassword: false,\n            username: '',\n        })\n    }\n\n    const validateAndLogin = ():void => {\n        \n        let newNotification = {\n            ...notifications\n        }\n\n        if (!validateEmail(values.email)) {\n            newNotification = { ...newNotification,  wrongEmail: true};\n        }\n        if (values.username.length < 3) {\n            newNotification = { ...newNotification,  usernameTooShort: true };\n            // return;\n        }\n        if (values.username.length > 18) {\n            newNotification = { ...newNotification,  usernameTooLong: true };\n        }\n\n        if (!validatePassword(values.password)) {\n            newNotification = { ...newNotification,  wrongPassword: true };\n        }\n\n        if (values.password !== values.confirmPassword) {\n            newNotification = { ...newNotification,  passwordsDontMatch: true };            // return\n        }\n\n        setNotification(newNotification);\n\n    }\n\n    const handleSubmit = (event: React.MouseEvent<HTMLButtonElement>)=> {\n        event.preventDefault();\n\n        validateAndLogin();\n            \n        addUser();\n\n    }\n\n\n\n\n    const handleChange = (prop: keyof DetailsForm) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setNotification({\n        wrongEmail: false,\n        wrongPassword: false,\n        passwordsDontMatch: false,\n        usernameTooLong:false,\n        usernameTooShort:false,\n        usernameExists: false,\n        emailExists: false,\n        userRegistered: false})\n    };\n\n    const handleClickShowPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n\n    const submitOnEnter = (event: React.KeyboardEvent<any>) => {\n        if (event.key === \"Enter\") {\n\n            event.preventDefault();\n\n            validateAndLogin();\n                \n            addUser();\n        }\n    };\n\n    if (loading) {\n        return (\n        <div className={classes.form}>\n            <TextField disabled onChange={handleChange('email')}\n                className={classes.textfield} name='email' label=\"Email\"   value={values.email} variant=\"filled\" />\n            <TextField disabled onChange={handleChange('username')}\n            value={values.username}\n                className={classes.textfield} name='username' label=\"Username\" variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                disabled\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n               \n            </FormControl>\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Confirm Password</InputLabel>\n                <FilledInput\n                disabled\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.confirmPassword}\n                    onChange={handleChange('confirmPassword')}\n                    endAdornment={\n                        <InputAdornment position=\"end\" />\n                    }\n                />\n            </FormControl>\n             <SpinnerButton className={classes.loginButton} disabled={loading} loading={loading} buttonLabel={'Register'} onClick={handleSubmit} />\n        </div>\n        )\n    }\n    if (!loading) {\n        return (\n            <div className={classes.form}>\n            {\n                notifications.wrongEmail ? (\n                   <Alert severity=\"error\">Wrong email</Alert>\n                ) : null\n            }\n            <TextField onKeyDown={submitOnEnter} onChange={handleChange('email')}\n                className={classes.textfield} name='email' label=\"Email\"   value={values.email} variant=\"filled\" />\n               {\n                    notifications.usernameTooShort ? (\n              <Alert severity=\"error\">Username's too short (3-18 char.)</Alert>\n                    ) : null\n                }\n                {\n                    notifications.usernameExists ? (\n              <Alert severity=\"error\">User with that email/username already exists</Alert>\n                    ) : null\n                    }\n                {\n                    notifications.usernameTooLong ? (\n                        <Alert severity=\"error\">Username's too long (3-18 char.)</Alert>\n                    ) : null\n                }\n            <TextField onKeyDown={submitOnEnter} onChange={handleChange('username')}\n            value={values.username}\n                className={classes.textfield} name='username' label=\"Username\" variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                onKeyDown={submitOnEnter}\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n                {\n                    notifications.wrongPassword ? (\n                        <Alert severity=\"error\">Password is too weak</Alert>\n                    ) : null\n                }\n            </FormControl>\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Confirm Password</InputLabel>\n                <FilledInput\n                onKeyDown={submitOnEnter}\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.confirmPassword}\n                    onChange={handleChange('confirmPassword')}\n                    endAdornment={\n                        <InputAdornment position=\"end\" />\n                    }\n                />\n            </FormControl>\n            {\n                notifications.passwordsDontMatch ? (\n                    <Alert severity=\"error\">Passwords don't match</Alert>\n                ) : null\n            }\n            {\n                    notifications.userRegistered ? (\n              <Alert severity=\"success\">Account has been created! You can login now.</Alert>\n                    ) : null\n                }\n            <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Register'} onClick={handleSubmit} />\n        </div>\n        )\n    }\n\n    return (\n        <></>\n    );\n};\n\n\nexport default withRouter(SignUp);","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.actions.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/password-validation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/email-validation.ts",["276","277"],"export const validateEmail = (email: string): boolean => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n};","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/index.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.graphql.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.styles.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.query.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/index.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner-button.component.tsx",["278"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            width: '100%'\n        },\n        wrapper: {\n            margin: theme.spacing(2),\n            position: 'relative',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        buttonProgress: {\n            color: green[500],\n            position: 'absolute',\n            top: '60%',\n            left: '50%',\n            marginTop: -12,\n            marginLeft: -12,\n        },\n    }),\n);\n\nconst SpinnerButton = ({ buttonLabel, onClick, loading, ...props }) => {\n    const classes = useStyles();\n    const timer = React.useRef<number>();\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(timer.current);\n        };\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                {<Button\n                    {...props}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    onClick={onClick}\n                >\n                    {buttonLabel}\n                </Button>}\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n        </div>\n    );\n};\n\nexport default SpinnerButton;","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.container.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.container.tsx",["279","280"],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport { useAvatarStyles } from './user-area.styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, TextField, } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from '../../store-redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { IUser, setCurrentUser } from '../../store-redux/index'\nimport { UPDATE_USERNAME } from '../../grapQL/user/user.mutation';\nimport { useMutation } from '@apollo/react-hooks';\n\n\ninterface IAlert {\n    usernameIncorrect: boolean;\n    usernameIsTaken: boolean;\n    usernameChanged: boolean;\n    internalBackendError: boolean;\n};\n\nconst Username = ({ user, dispatchSetCurrentUser }: { user: IUser, dispatchSetCurrentUser }) => {\n\n    const classes = useAvatarStyles();\n    const [usernameButton, setUsernameClicked]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [usernameInput, setUsernameInput]: [string, Dispatch<SetStateAction<string>>] = useState(user?.username || \"My Username\");\n    const [alert, setAlert]: [IAlert, Dispatch<SetStateAction<IAlert>>] = useState({\n        usernameIncorrect: false,\n        usernameIsTaken: false,\n        usernameChanged: false,\n        internalBackendError: false\n    });\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\") === null) {\n            setUsernameInput(\"My Username\")\n        }\n    }, [usernameInput, usernameButton]);\n\n    const changeUsername = () => {\n        setUsernameClicked(true);\n        setAlert({\n            usernameIncorrect: false,\n            usernameIsTaken: false,\n            usernameChanged: false,\n            internalBackendError: false\n        })\n    }\n\n    const handleUsernameChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setUsernameInput(event.target.value);\n    };\n\n    const [updateUsername, { loading, error, data }] = useMutation(UPDATE_USERNAME, {\n        onCompleted: () => {\n            setAlert({ ...alert, usernameChanged: true });\n            setUsernameClicked(false);\n            dispatchSetCurrentUser({\n                username: data.login.username\n            });\n        },\n        onError: (error) => setAlert({ ...alert, usernameChanged: true }),\n    });\n\n\n\n    const handleEnter = (event) => {\n        if (event.key === \"Enter\") {\n            if (usernameInput.length < 3 || usernameInput.length > 19) {\n                setAlert({\n                    ...alert,\n                    usernameIncorrect: true,\n                })\n            };\n            updateUsername(\n                {\n                    variables: {\n                        username: usernameInput\n                    }\n                }\n            );\n        };\n    };\n\n    console.log(\"RENDERING\", usernameButton)\n\n    return (\n        <div className={classes.root}>\n            {usernameButton ?\n                <div className={classes.usernameButton}>\n                    <TextField\n                        onKeyDown={handleEnter}\n                        onChange={handleUsernameChangeInput}\n                        id=\"outlined-margin-dense\"\n                        value={usernameInput}\n                        className={classes.textField}\n                        variant=\"outlined\" />\n                </div>\n                :\n                <div className={classes.usernameButton}>\n                    <Button disabled={usernameInput === \"My Username\"} onClick={changeUsername}>{usernameInput}</Button>\n                </div>}\n            {\n                alert.usernameChanged ? (\n                    <Alert severity=\"success\">Username changed!</Alert>\n                ) : null\n            }\n            {\n                alert.usernameIncorrect ? (\n                    <Alert severity=\"error\">Insert 3-18 characters!</Alert>\n                ) : null\n            }\n            {\n                alert.internalBackendError ? (\n                    <Alert severity=\"error\">Something went wrong! Try later.</Alert>\n                ) : null\n            }\n            {\n                alert.usernameIsTaken ? (\n                    <Alert severity=\"error\">Username is already taken.</Alert>\n                ) : null\n            }\n            <Avatar alt=\"cs-go-player\" className={classes.large}\n                src=\"https://www.freelogodesign.org/file/app/client/thumb/677a71e1-9743-4516-b642-5efce841f31e_200x200.png?1612293369136\" />\n        </div >\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    user: selectCurrentUser,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSetCurrentUser: (user) => dispatch(setCurrentUser(user))\n});\n\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps)\n    (Username);","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/autocomplete.tsx",["281"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.component.tsx",["282","283","284"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { Button, FormControl } from '@material-ui/core';\nimport { useUploadStyles } from './event-image.styles';\n\nconst AvatarUploadStep = ({ imageValue, onImageUpload }) => {\n    const classes = useUploadStyles();\n\n    return (\n        <div className={classes.upload}>\n            { imageValue ?\n                <FormControl className={classes.formControl}>\n                    <img className={classes.image} alt='Success!' src={imageValue} />\n                </FormControl>\n                :\n                <FormControl className={classes.formControl}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >Upload File\n                    <input\n                            hidden\n                            type=\"file\"\n                            onChange={onImageUpload}\n                        />\n                    </Button>\n                </FormControl>}\n        </div>\n    );\n\n}\n\nexport default AvatarUploadStep;","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.container.tsx",["285","286","287"],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.query.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/models/when.enum.ts",[],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":15},{"ruleId":"292","severity":1,"message":"296","line":1,"column":10,"nodeType":"294","messageId":"295","endLine":1,"endColumn":27},{"ruleId":"292","severity":1,"message":"297","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":29},{"ruleId":"292","severity":1,"message":"298","line":14,"column":10,"nodeType":"294","messageId":"295","endLine":14,"endColumn":18},{"ruleId":"292","severity":1,"message":"299","line":20,"column":19,"nodeType":"294","messageId":"295","endLine":20,"endColumn":27},{"ruleId":"300","severity":1,"message":"301","line":33,"column":8,"nodeType":"302","endLine":33,"endColumn":22,"suggestions":"303"},{"ruleId":"292","severity":1,"message":"304","line":15,"column":8,"nodeType":"294","messageId":"295","endLine":15,"endColumn":25},{"ruleId":"292","severity":1,"message":"305","line":96,"column":12,"nodeType":"294","messageId":"295","endLine":96,"endColumn":17},{"ruleId":"292","severity":1,"message":"299","line":96,"column":19,"nodeType":"294","messageId":"295","endLine":96,"endColumn":27},{"ruleId":"292","severity":1,"message":"306","line":1,"column":28,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"307","line":14,"column":5,"nodeType":"294","messageId":"295","endLine":14,"endColumn":19},{"ruleId":"292","severity":1,"message":"308","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":23},{"ruleId":"292","severity":1,"message":"309","line":12,"column":10,"nodeType":"294","messageId":"295","endLine":12,"endColumn":26},{"ruleId":"310","severity":1,"message":"311","line":2,"column":26,"nodeType":"312","messageId":"313","endLine":2,"endColumn":27,"suggestions":"314"},{"ruleId":"310","severity":1,"message":"311","line":2,"column":51,"nodeType":"312","messageId":"313","endLine":2,"endColumn":52,"suggestions":"315"},{"ruleId":"300","severity":1,"message":"316","line":37,"column":32,"nodeType":"294","endLine":37,"endColumn":39},{"ruleId":"292","severity":1,"message":"317","line":53,"column":30,"nodeType":"294","messageId":"295","endLine":53,"endColumn":37},{"ruleId":"292","severity":1,"message":"318","line":53,"column":39,"nodeType":"294","messageId":"295","endLine":53,"endColumn":44},{"ruleId":"292","severity":1,"message":"319","line":41,"column":19,"nodeType":"294","messageId":"295","endLine":41,"endColumn":28},{"ruleId":"292","severity":1,"message":"320","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"321","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":41},{"ruleId":"292","severity":1,"message":"306","line":1,"column":43,"nodeType":"294","messageId":"295","endLine":1,"endColumn":51},{"ruleId":"292","severity":1,"message":"322","line":15,"column":28,"nodeType":"294","messageId":"295","endLine":15,"endColumn":32},{"ruleId":"292","severity":1,"message":"318","line":176,"column":36,"nodeType":"294","messageId":"295","endLine":176,"endColumn":41},{"ruleId":"292","severity":1,"message":"323","line":176,"column":43,"nodeType":"294","messageId":"295","endLine":176,"endColumn":47},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"@typescript-eslint/no-unused-vars","'IUser' is defined but never used.","Identifier","unusedVar","'NavigationTwoTone' is defined but never used.","'DEFAULT_MAX_VERSION' is defined but never used.","'useQuery' is defined but never used.","'setAlert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchPost'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'AutoCompletePlace' is defined but never used.","'alert' is assigned a value but never used.","'useState' is defined but never used.","'DateTimePicker' is defined but never used.","'validateEmail' is defined but never used.","'waitForDomChange' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["327","328"],["329","330"],"The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'locations' is assigned a value but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'When' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"messageId":"333","fix":"334","desc":"335"},{"messageId":"336","fix":"337","desc":"338"},{"messageId":"333","fix":"339","desc":"335"},{"messageId":"336","fix":"340","desc":"338"},"Update the dependencies array to be: [searchPhrase, searchPost]",{"range":"341","text":"342"},"removeEscape",{"range":"343","text":"344"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"345","text":"346"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"347","text":"344"},{"range":"348","text":"346"},[1288,1302],"[searchPhrase, searchPost]",[84,85],"",[84,84],"\\",[109,110],[109,109]]