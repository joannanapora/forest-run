[{"/Users/porczi/forest/reactapp-teamfinder/src/index.tsx":"1","/Users/porczi/forest/reactapp-teamfinder/src/reportWebVitals.ts":"2","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/store.ts":"3","/Users/porczi/forest/reactapp-teamfinder/src/App.tsx":"4","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/root-reducer.ts":"5","/Users/porczi/forest/reactapp-teamfinder/src/App.styles.ts":"6","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.reducer.ts":"7","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.reducer.ts":"8","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.styles.ts":"9","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.selectors.ts":"10","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.selectors.ts":"11","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.component.tsx":"12","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx":"13","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.component.tsx":"14","/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.component.tsx":"15","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.component.tsx":"16","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.component.tsx":"17","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.component.tsx":"18","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.component.tsx":"19","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.types.ts":"20","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.styles.ts":"21","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.styles.ts":"22","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts":"23","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.styles.ts":"24","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.styles.ts":"25","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.styles.tsx":"26","/Users/porczi/forest/reactapp-teamfinder/src/stripe/stripe.component.tsx":"27","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.component.tsx":"28","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.component.tsx":"29","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.component.tsx":"30","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.component.tsx":"31","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.actions.ts":"32","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.styles.ts":"33","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.styles.ts":"34","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.styles.ts":"35","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.styles.ts":"36","/Users/porczi/forest/reactapp-teamfinder/src/shared/password-validation.ts":"37","/Users/porczi/forest/reactapp-teamfinder/src/shared/email-validation.ts":"38","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/index.ts":"39","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.graphql.ts":"40","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.styles.ts":"41","/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.styles.ts":"42","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.styles.tsx":"43","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.component.tsx":"44","/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.styles.ts":"45","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.query.tsx":"46","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.mutation.ts":"47","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/index.ts":"48","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.component.tsx":"49","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.styles.ts":"50","/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner-button.component.tsx":"51","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.container.tsx":"52","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.container.tsx":"53","/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.styles.ts":"54","/Users/porczi/forest/reactapp-teamfinder/src/autocomplete.tsx":"55","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.component.tsx":"56","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.styles.ts":"57","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.mutation.ts":"58","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.container.tsx":"59","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.mutation.ts":"60","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.query.ts":"61","/Users/porczi/forest/reactapp-teamfinder/src/models/when.enum.ts":"62"},{"size":1277,"mtime":1612350575753,"results":"63","hashOfConfig":"64"},{"size":425,"mtime":1612188791632,"results":"65","hashOfConfig":"64"},{"size":307,"mtime":1612188791637,"results":"66","hashOfConfig":"64"},{"size":300,"mtime":1612350446295,"results":"67","hashOfConfig":"64"},{"size":461,"mtime":1612188791636,"results":"68","hashOfConfig":"64"},{"size":164,"mtime":1612188791510,"results":"69","hashOfConfig":"64"},{"size":527,"mtime":1612267861851,"results":"70","hashOfConfig":"64"},{"size":965,"mtime":1612267867959,"results":"71","hashOfConfig":"64"},{"size":2473,"mtime":1612293416062,"results":"72","hashOfConfig":"64"},{"size":224,"mtime":1612267846896,"results":"73","hashOfConfig":"64"},{"size":268,"mtime":1612267437361,"results":"74","hashOfConfig":"64"},{"size":3091,"mtime":1612536038930,"results":"75","hashOfConfig":"64"},{"size":953,"mtime":1612188791625,"results":"76","hashOfConfig":"64"},{"size":5448,"mtime":1612543028537,"results":"77","hashOfConfig":"64"},{"size":3917,"mtime":1612519606345,"results":"78","hashOfConfig":"64"},{"size":2965,"mtime":1612548778577,"results":"79","hashOfConfig":"64"},{"size":6587,"mtime":1612626397526,"results":"80","hashOfConfig":"64"},{"size":8574,"mtime":1612434015361,"results":"81","hashOfConfig":"64"},{"size":5675,"mtime":1612222882167,"results":"82","hashOfConfig":"64"},{"size":76,"mtime":1612188791639,"results":"83","hashOfConfig":"64"},{"size":1136,"mtime":1612370600950,"results":"84","hashOfConfig":"64"},{"size":1511,"mtime":1612522412963,"results":"85","hashOfConfig":"64"},{"size":1709,"mtime":1612523736173,"results":"86","hashOfConfig":"64"},{"size":2022,"mtime":1612188791631,"results":"87","hashOfConfig":"64"},{"size":2536,"mtime":1612188791630,"results":"88","hashOfConfig":"64"},{"size":1161,"mtime":1612370637713,"results":"89","hashOfConfig":"64"},{"size":772,"mtime":1612188791640,"results":"90","hashOfConfig":"64"},{"size":4354,"mtime":1612539179904,"results":"91","hashOfConfig":"64"},{"size":1521,"mtime":1612448175242,"results":"92","hashOfConfig":"64"},{"size":5264,"mtime":1612461003046,"results":"93","hashOfConfig":"64"},{"size":10969,"mtime":1612368158580,"results":"94","hashOfConfig":"64"},{"size":180,"mtime":1612188791638,"results":"95","hashOfConfig":"64"},{"size":431,"mtime":1612368557852,"results":"96","hashOfConfig":"64"},{"size":696,"mtime":1612368541016,"results":"97","hashOfConfig":"64"},{"size":518,"mtime":1612188791623,"results":"98","hashOfConfig":"64"},{"size":984,"mtime":1612457756490,"results":"99","hashOfConfig":"64"},{"size":197,"mtime":1612188791634,"results":"100","hashOfConfig":"64"},{"size":280,"mtime":1612188791633,"results":"101","hashOfConfig":"64"},{"size":226,"mtime":1612451765921,"results":"102","hashOfConfig":"64"},{"size":587,"mtime":1612191099930,"results":"103","hashOfConfig":"64"},{"size":1910,"mtime":1612535977798,"results":"104","hashOfConfig":"64"},{"size":222,"mtime":1612189945108,"results":"105","hashOfConfig":"64"},{"size":905,"mtime":1612188791618,"results":"106","hashOfConfig":"64"},{"size":575,"mtime":1612535446298,"results":"107","hashOfConfig":"64"},{"size":414,"mtime":1612535983926,"results":"108","hashOfConfig":"64"},{"size":271,"mtime":1612220836140,"results":"109","hashOfConfig":"64"},{"size":357,"mtime":1612266303636,"results":"110","hashOfConfig":"64"},{"size":108,"mtime":1612267844999,"results":"111","hashOfConfig":"64"},{"size":348,"mtime":1612188791634,"results":"112","hashOfConfig":"64"},{"size":312,"mtime":1612188791635,"results":"113","hashOfConfig":"64"},{"size":1652,"mtime":1612475377807,"results":"114","hashOfConfig":"64"},{"size":6638,"mtime":1612449434889,"results":"115","hashOfConfig":"64"},{"size":4677,"mtime":1612542635647,"results":"116","hashOfConfig":"64"},{"size":709,"mtime":1612451533391,"results":"117","hashOfConfig":"64"},{"size":2993,"mtime":1612519550557,"results":"118","hashOfConfig":"64"},{"size":1072,"mtime":1612449317011,"results":"119","hashOfConfig":"64"},{"size":627,"mtime":1612365032579,"results":"120","hashOfConfig":"64"},{"size":247,"mtime":1612432287685,"results":"121","hashOfConfig":"64"},{"size":14858,"mtime":1612541901453,"results":"122","hashOfConfig":"64"},{"size":1139,"mtime":1612558124267,"results":"123","hashOfConfig":"64"},{"size":349,"mtime":1612540065077,"results":"124","hashOfConfig":"64"},{"size":1554,"mtime":1612459624813,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"i99r7u",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"/Users/porczi/forest/reactapp-teamfinder/src/index.tsx",[],["262","263"],"/Users/porczi/forest/reactapp-teamfinder/src/reportWebVitals.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/store.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/App.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/root-reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/App.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.reducer.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.selectors.ts",["264"],"import { createSelector } from 'reselect';\nimport { IUser } from './user.reducer';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n    [selectUser],\n    (user) => user.currentUser);","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/nav/nav.selectors.ts",["265","266"],"import { NavigationTwoTone } from '@material-ui/icons';\nimport { createSelector } from 'reselect';\nimport { DEFAULT_MAX_VERSION } from 'tls';\n\nconst selectNav = state => state.nav;\n\nexport const selectNavTabs = createSelector(\n    [selectNav],\n    nav => nav.navTabs\n)","/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.component.tsx",["267"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.component.tsx",["268"],"import React from 'react';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { useTimeLinesStyles } from './timelines.styles';\nimport AppleIcon from '@material-ui/icons/Apple';\nimport { DirectionsRun, Search } from '@material-ui/icons';\nimport AutoCompletePlace from '../../../autocomplete';\n\nconst TimeLines = () => {\n    const classes = useTimeLinesStyles();\n\n    return (\n        <Timeline className={classes.root} align=\"alternate\">\n            <TimelineItem>\n                <TimelineOppositeContent>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color='primary' variant=\"outlined\">\n                        <LaptopMacIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Register\n            </Typography>\n                        <Typography>in Forest app</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent>\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\">\n                        <Search />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Find\n            </Typography>\n                        <Typography>or create running event!</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\" variant=\"outlined\">\n                        <DirectionsRun />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Take a part,\n            </Typography>\n                        <Typography>meet people and feel good.</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot color=\"primary\">\n                        <AppleIcon />\n                    </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography variant=\"h6\" component=\"h1\">\n                            Remember about\n                        </Typography>\n                        <Typography>post-workout nutrition</Typography>\n                    </Paper>\n                </TimelineContent>\n            </TimelineItem>\n            {/* <AutoCompletePlace /> */}\n        </Timeline>\n    );\n};\n\nexport default TimeLines;\n","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.component.tsx",["269","270","271","272"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.types.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/donate/donate.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in-sign-up/sign-in-up.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/delete-post/delete-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/create-post/create-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-list/event-list.styles.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/stripe/stripe.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.component.tsx",["273","274"],"import React, { useEffect, useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { usePersonalStyles } from './event-details.styles';\nimport { InputAdornment, TextField } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    DatePicker,\n    TimePicker,\n    DateTimePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\n\nconst DATES = [\n    { name: 'one time event', id: 0 },\n    { name: 'everyday', id: 1 },\n    { name: 'weekends', id: 2 },\n    { name: 'saturdays', id: 3 },\n    { name: 'sundays', id: 4 },\n    { name: 'two times a week', id: 5 },\n    { name: 'three times a week', id: 6 },\n    { name: 'four times a week', id: 7 },\n    { name: 'five times a week', id: 8 },\n];\n\n\n\nconst PersonalSelect = ({ timeValue, dateValue, locationValue, distanceValue, changeTime, changeDate,\n    whenValue, changeWhen, changeDistance, changeLocation, whenRequiredAlert, locationRequiredAlert, distanceRequiredAlert, timeRequiredAlert, dateRequiredAlert }) => {\n\n    const classes = usePersonalStyles();\n\n\n    useEffect(() => { }, [dateRequiredAlert, timeRequiredAlert, distanceRequiredAlert, locationRequiredAlert])\n\n    return (\n        <div className={classes.favselects}>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">WHEN</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={whenValue}\n                    onChange={changeWhen}\n                >\n                    {DATES.map((item) => (\n                        <MenuItem key={item.id} value={item.name}>\n                            {item.name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            {\n                whenRequiredAlert ? (\n                    <div className={classes.alert}><Alert severity=\"error\">Field above is required </Alert></div>\n                ) : null\n            }\n            {\n                whenValue === 'one time event' ?\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker className={classes.textField} value={dateValue} onChange={changeDate} />\n                    </MuiPickersUtilsProvider>\n                    :\n                    null\n            }\n            {\n                dateRequiredAlert ? (\n                    <div className={classes.alert}><Alert severity=\"error\">Field above is required </Alert></div>\n                ) : null\n            }\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n                <TimePicker className={classes.textField} value={timeValue} onChange={changeTime} />\n\n            </MuiPickersUtilsProvider>\n            {\n                timeRequiredAlert ? (\n                    <div className={classes.alert}><Alert severity=\"error\">Field above is required </Alert></div>\n                ) : null\n            }\n            <TextField\n                className={classes.textField}\n                value={locationValue}\n                id=\"standard-textarea\"\n                label=\"Location\"\n                onChange={changeLocation}\n            />\n            {\n                locationRequiredAlert ? (\n                    <div className={classes.alert}><Alert severity=\"error\">Field above is required </Alert></div>\n                ) : null\n            }\n            <FormControl className={classes.formControl}>\n                <Input\n                    type='number'\n                    name='distance'\n                    value={distanceValue}\n                    onChange={changeDistance}\n                    endAdornment={<InputAdornment position=\"end\">Miles</InputAdornment>}\n                />\n            </FormControl>\n            {\n                distanceRequiredAlert ? (\n                    <div className={classes.alert}><Alert severity=\"error\">Field above is required </Alert></div>\n                ) : null\n            }\n        </div>\n    );\n};\n\nexport default PersonalSelect;","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.component.tsx",["275"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { FilledInput, FormControl, InputLabel, TextField } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { validateEmail } from '../../../shared/email-validation';\nimport { useSignInStyles } from './sign-in.styles';\nimport { LOGIN_USER } from '../../../grapQL';\nimport { useMutation } from '@apollo/react-hooks';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../../../store-redux';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\n\n\ninterface DetailsForm {\n    email: string;\n    password: string;\n}\n\ninterface ErrorAlerts {\n    wrongEmailPassword: boolean;\n    internalBackendError: boolean;\n}\n\nconst SignIn = ({ dispatchSetCurrentUser, history }) => {\n    const classes = useSignInStyles();\n    const [values, setValues]: [DetailsForm, Dispatch<SetStateAction<DetailsForm>>] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [errors, setErrors]: [ErrorAlerts, Dispatch<SetStateAction<ErrorAlerts>>] = useState({\n        wrongEmailPassword: false,\n        internalBackendError: false,\n    });\n\n    const [loginUser, { loading }] = useMutation(\n        LOGIN_USER, {\n        update(_, result) {\n            history.push('/upcoming-events');\n            const Token = result.data.login.accessToken;\n            localStorage.setItem('token', Token);\n            dispatchSetCurrentUser({\n                username: result.data.login.username\n            });\n        },\n        onError(e) {\n            if ((e.graphQLErrors[0].message as any).statusCode === 500) {\n                setErrors({ ...errors, internalBackendError: true });\n            }\n            if ((e.graphQLErrors[0].message as any).statusCode === 401) {\n                setErrors({ ...errors, wrongEmailPassword: true });\n            }\n        },\n        variables: {\n            email: values.email,\n            password: values.password\n        }\n    }\n    );\n\n    const handleChange = (prop: keyof DetailsForm) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setErrors({\n            wrongEmailPassword: false,\n            internalBackendError: false,\n        });\n    };\n\n    const handleSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n        loginUser();\n    };\n\n    const submitOnEnter = (event: React.KeyboardEvent<any>) => {\n        if (event.key === \"Enter\") {\n            loginUser();\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className={classes.form}>\n                <TextField value={values.email}\n                    disabled\n                    onKeyDown={submitOnEnter}\n                    onChange={handleChange('email')}\n                    className={classes.textfield}\n                    name='email'\n                    label=\"email\"\n                    variant=\"filled\" />\n                <FormControl className={classes.textfield} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        disabled\n                        onKeyDown={submitOnEnter}\n                        id=\"filled-adornment-password\"\n                        type={'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                    />\n                </FormControl>\n                <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n            </div>\n        )\n    }\n    if (!loading)\n        return (<div className={classes.form}>\n            <TextField value={values.email}\n                onKeyDown={submitOnEnter}\n                onChange={handleChange('email')}\n                className={classes.textfield}\n                name='email'\n                label=\"email\"\n                variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                    onKeyDown={submitOnEnter}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                />\n            </FormControl>\n            {\n                errors.internalBackendError ? (\n                    <Alert severity=\"error\">Something went wrong Try again later</Alert>\n                ) : null\n            }\n            {\n                errors.wrongEmailPassword ? (\n                    <Alert severity=\"error\">Email or Password is wrong</Alert>\n                ) : null\n            }\n            <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n\n        </div>);\n\n    return (\n        <></>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSetCurrentUser: (user) => dispatch(setCurrentUser(user))\n});\n\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps)\n    (SignIn));","/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.component.tsx",["276"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { FilledInput, FormControl, IconButton, InputAdornment, InputLabel, TextField } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { withRouter } from \"react-router-dom\";\nimport { validateEmail } from '../../../shared/email-validation';\nimport { validatePassword } from '../../../shared/password-validation';\nimport Alert from '@material-ui/lab/Alert';\nimport { useSignUpStyles } from './sign-up.styles';\nimport {REGISTER_USER} from '../../../grapQL';\nimport {useMutation} from '@apollo/react-hooks';\nimport SpinnerButton from '../../../shared/spinner/spinner-button.component';\nimport { waitForDomChange } from '@testing-library/react';\n\n\ninterface DetailsForm {\n    email: string;\n    password: string;\n    confirmPassword: string;\n    showPassword: boolean;\n    username: string;\n}\n\ninterface ErrorAlerts {\n    wrongEmail: boolean;\n    wrongPassword: boolean;\n    passwordsDontMatch: boolean;\n    usernameExists: boolean;\n    emailExists: boolean;\n    usernameTooShort: boolean;\n    usernameTooLong: boolean;\n    userRegistered: boolean;\n}\n\n\nconst SignUp = () => {\n    const classes = useSignUpStyles();\n    const [values, setValues]:[DetailsForm, Dispatch<SetStateAction<DetailsForm>>] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        showPassword: false,\n        username: '',\n    });\n\n    const [notifications, setNotification]:[ErrorAlerts, Dispatch<SetStateAction<ErrorAlerts>>] = useState({\n        wrongEmail: false,\n        wrongPassword: false,\n        passwordsDontMatch: false,\n        usernameTooLong:false,\n        usernameTooShort:false,\n        usernameExists: false,\n        emailExists: false,\n        userRegistered: false,\n    });\n\n\n    const [addUser, {loading}] = useMutation(\n        REGISTER_USER, {\n            update(_, result){\n                setNotification({...notifications, userRegistered: true});\n                clearAllInputs();\n            },\n            onError(e) {\n                if ((e.graphQLErrors[0].message as any).statusCode === 409) {\n                    setNotification({...notifications, usernameExists: true});\n                }\n                        },\n            variables: {\n                username: values.username,\n                email: values.email,\n                password: values.password\n            }\n        }\n    );\n\n    const clearAllInputs = (): void => {\n        setValues({\n            email: '',\n            password: '',\n            confirmPassword: '',\n            showPassword: false,\n            username: '',\n        })\n    }\n\n    const validateAndLogin = ():void => {\n        \n        let newNotification = {\n            ...notifications\n        }\n\n        if (!validateEmail(values.email)) {\n            newNotification = { ...newNotification,  wrongEmail: true};\n        }\n        if (values.username.length < 3) {\n            newNotification = { ...newNotification,  usernameTooShort: true };\n            // return;\n        }\n        if (values.username.length > 18) {\n            newNotification = { ...newNotification,  usernameTooLong: true };\n        }\n\n        if (!validatePassword(values.password)) {\n            newNotification = { ...newNotification,  wrongPassword: true };\n        }\n\n        if (values.password !== values.confirmPassword) {\n            newNotification = { ...newNotification,  passwordsDontMatch: true };            // return\n        }\n\n        setNotification(newNotification);\n\n    }\n\n    const handleSubmit = (event: React.MouseEvent<HTMLButtonElement>)=> {\n        event.preventDefault();\n\n        validateAndLogin();\n            \n        addUser();\n\n    }\n\n\n\n\n    const handleChange = (prop: keyof DetailsForm) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n        setNotification({\n        wrongEmail: false,\n        wrongPassword: false,\n        passwordsDontMatch: false,\n        usernameTooLong:false,\n        usernameTooShort:false,\n        usernameExists: false,\n        emailExists: false,\n        userRegistered: false})\n    };\n\n    const handleClickShowPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n\n    const submitOnEnter = (event: React.KeyboardEvent<any>) => {\n        if (event.key === \"Enter\") {\n\n            event.preventDefault();\n\n            validateAndLogin();\n                \n            addUser();\n        }\n    };\n\n    if (loading) {\n        return (\n        <div className={classes.form}>\n            <TextField disabled onChange={handleChange('email')}\n                className={classes.textfield} name='email' label=\"Email\"   value={values.email} variant=\"filled\" />\n            <TextField disabled onChange={handleChange('username')}\n            value={values.username}\n                className={classes.textfield} name='username' label=\"Username\" variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                disabled\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n               \n            </FormControl>\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Confirm Password</InputLabel>\n                <FilledInput\n                disabled\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.confirmPassword}\n                    onChange={handleChange('confirmPassword')}\n                    endAdornment={\n                        <InputAdornment position=\"end\" />\n                    }\n                />\n            </FormControl>\n             <SpinnerButton className={classes.loginButton} disabled={loading} loading={loading} buttonLabel={'Register'} onClick={handleSubmit} />\n        </div>\n        )\n    }\n    if (!loading) {\n        return (\n            <div className={classes.form}>\n            {\n                notifications.wrongEmail ? (\n                   <Alert severity=\"error\">Wrong email</Alert>\n                ) : null\n            }\n            <TextField onKeyDown={submitOnEnter} onChange={handleChange('email')}\n                className={classes.textfield} name='email' label=\"Email\"   value={values.email} variant=\"filled\" />\n               {\n                    notifications.usernameTooShort ? (\n              <Alert severity=\"error\">Username's too short (3-18 char.)</Alert>\n                    ) : null\n                }\n                {\n                    notifications.usernameExists ? (\n              <Alert severity=\"error\">User with that email/username already exists</Alert>\n                    ) : null\n                    }\n                {\n                    notifications.usernameTooLong ? (\n                        <Alert severity=\"error\">Username's too long (3-18 char.)</Alert>\n                    ) : null\n                }\n            <TextField onKeyDown={submitOnEnter} onChange={handleChange('username')}\n            value={values.username}\n                className={classes.textfield} name='username' label=\"Username\" variant=\"filled\" />\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                <FilledInput\n                onKeyDown={submitOnEnter}\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={values.showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    onChange={handleChange('password')}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                            >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                />\n                {\n                    notifications.wrongPassword ? (\n                        <Alert severity=\"error\">Password is too weak</Alert>\n                    ) : null\n                }\n            </FormControl>\n            <FormControl className={classes.textfield} variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-password\">Confirm Password</InputLabel>\n                <FilledInput\n                onKeyDown={submitOnEnter}\n                    error={false}\n                    id=\"filled-adornment-password\"\n                    type={'password'}\n                    value={values.confirmPassword}\n                    onChange={handleChange('confirmPassword')}\n                    endAdornment={\n                        <InputAdornment position=\"end\" />\n                    }\n                />\n            </FormControl>\n            {\n                notifications.passwordsDontMatch ? (\n                    <Alert severity=\"error\">Passwords don't match</Alert>\n                ) : null\n            }\n            {\n                    notifications.userRegistered ? (\n              <Alert severity=\"success\">Account has been created! You can login now.</Alert>\n                    ) : null\n                }\n            <SpinnerButton className={classes.loginButton} loading={loading} buttonLabel={'Register'} onClick={handleSubmit} />\n        </div>\n        )\n    }\n\n    return (\n        <></>\n    );\n};\n\n\nexport default withRouter(SignUp);","/Users/porczi/forest/reactapp-teamfinder/src/store-redux/user/user.actions.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-up/sign-up.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/login/sign-in/sign-in.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-meetpoint/event-meetpoint.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-details/event-details.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/password-validation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/email-validation.ts",["277","278"],"export const validateEmail = (email: string): boolean => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n};","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/index.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.graphql.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/articles/notice-board.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/landing/timelines/timelines.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/event-card/event.styles.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.component.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/notice-board/search-post/search-post.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.query.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/post/post.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/store-redux/index.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.component.tsx",[],["279","280"],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/shared/spinner/spinner-button.component.tsx",["281"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            width: '100%'\n        },\n        wrapper: {\n            margin: theme.spacing(2),\n            position: 'relative',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        buttonProgress: {\n            color: green[500],\n            position: 'absolute',\n            top: '60%',\n            left: '50%',\n            marginTop: -12,\n            marginLeft: -12,\n        },\n    }),\n);\n\nconst SpinnerButton = ({ buttonLabel, onClick, loading, ...props }) => {\n    const classes = useStyles();\n    const timer = React.useRef<number>();\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(timer.current);\n        };\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                {<Button\n                    {...props}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    onClick={onClick}\n                >\n                    {buttonLabel}\n                </Button>}\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n        </div>\n    );\n};\n\nexport default SpinnerButton;","/Users/porczi/forest/reactapp-teamfinder/src/nav/menu-drawer/menu-drawer.container.tsx",[],"/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.container.tsx",["282","283"],"/Users/porczi/forest/reactapp-teamfinder/src/nav/user-area/user-area.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/autocomplete.tsx",["284"],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.component.tsx",["285","286","287"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { Button, FormControl } from '@material-ui/core';\nimport { useUploadStyles } from './event-image.styles';\n\nconst AvatarUploadStep = ({ imageValue, onImageUpload }) => {\n    const classes = useUploadStyles();\n\n    return (\n        <div className={classes.upload}>\n            { imageValue ?\n                <FormControl className={classes.formControl}>\n                    <img className={classes.image} alt='Success!' src={imageValue} />\n                </FormControl>\n                :\n                <FormControl className={classes.formControl}>\n                    <Button\n                        variant=\"contained\"\n                        component=\"label\"\n                    >Upload File\n                    <input\n                            hidden\n                            type=\"file\"\n                            onChange={onImageUpload}\n                        />\n                    </Button>\n                </FormControl>}\n        </div>\n    );\n\n}\n\nexport default AvatarUploadStep;","/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/event-image/event-image.styles.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/user/user.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/pages/events/new-event/create-event/create-event.container.tsx",["288","289"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport UploudEventImage from '../event-image/event-image.component';\nimport MeetingPoint from '../event-meetpoint/event-meetpoint.component';\nimport EventDetails from '../event-details/event-details.component';\nimport { useCardEditStyles } from './create-event.styles';\nimport { Paper, StepContent, StepLabel } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Modal from '@material-ui/core/Modal';\nimport { CREATE_EVENT } from '../../../../grapQL';\nimport { useMutation } from '@apollo/react-hooks';\nimport { mapOptionsToWhen } from '../../../../models/when.enum';\nimport SpinnerButton from '../../../../shared/spinner/spinner-button.component';\n\n\nfunction getSteps() {\n    return ['Set up event details', 'Meeting place and Event description', 'Upload Event Image'];\n}\n\ninterface Notifications {\n    internalBackendError: boolean;\n    missedInputs: {\n        emptyWhen: boolean;\n        emptyLocation: boolean;\n        emptyDate: boolean;\n        emptyDistance: boolean;\n        emptyTime: boolean;\n    };\n    eventCreated: boolean;\n}\n\ninterface IAllEventDetails {\n    organizerName: string;\n    organizerPhoneNumber: string;\n    meetingPoint: string;\n    eventDescription: string;\n    location: string;\n    when: string;\n    distance: string;\n    image: File;\n}\n\nconst CreateEvent = () => {\n    const classes = useCardEditStyles();\n    const [activeStep, setActiveStep]: [number, Dispatch<SetStateAction<number>>] = useState(0);\n    const [openModal, setOpenModal]: [boolean, Dispatch<SetStateAction<boolean>>] = useState(false);\n    const [alert, setAlert]: [Notifications, Dispatch<SetStateAction<Notifications>>] = useState({\n        internalBackendError: false,\n        missedInputs: {\n            emptyWhen: false,\n            emptyLocation: false,\n            emptyDate: false,\n            emptyDistance: false,\n            emptyTime: false,\n        },\n        eventCreated: false\n    });\n\n    const [allDetails, setAllDetails]: [IAllEventDetails, Dispatch<SetStateAction<IAllEventDetails>>] = useState({\n        organizerName: '',\n        organizerPhoneNumber: '',\n        meetingPoint: '',\n        eventDescription: '',\n        location: '',\n        when: '',\n        distance: '',\n        image: null,\n    })\n\n\n    const handleDetailChange = (prop) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAlert({\n            missedInputs: {\n                emptyWhen: false,\n                emptyLocation: false,\n                emptyDate: false,\n                emptyDistance: false,\n                emptyTime: false\n            },\n            eventCreated: false,\n            internalBackendError: false,\n        });\n        if (prop === 'image') {\n            setAllDetails({ ...allDetails, image: event.target.files[0] });\n        } else {\n            setAllDetails({ ...allDetails, [prop]: event.target.value });\n        }\n    };\n\n\n    const [dateValue, changeDate] = useState(new Date());\n    const [timeValue, changeTime] = useState(new Date());\n\n\n\n    const handleValidation = (): boolean => {\n        if (allDetails.when === '') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyWhen: true } });\n            return false;\n        }\n        if (timeValue === null) {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyTime: true } });\n            return false;\n        }\n        if (allDetails.location === '') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyLocation: true } });\n            return false;\n        }\n        if (allDetails.distance === '') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyDistance: true } });\n            return false;\n        }\n        if (dateValue === null && allDetails.when === 'one time event') {\n            setAlert({ ...alert, missedInputs: { ...alert.missedInputs, emptyDate: true } });\n            return false;\n        }\n\n        return true;\n    };\n\n\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return (\n                    <EventDetails\n                        dateValue={dateValue}\n                        timeValue={timeValue}\n                        locationValue={allDetails.location}\n                        distanceValue={allDetails.distance}\n                        whenValue={allDetails.when}\n                        changeWhen={handleDetailChange('when')}\n                        changeDistance={handleDetailChange('distance')}\n                        changeLocation={handleDetailChange('location')}\n                        changeDate={changeDate}\n                        changeTime={changeTime}\n                        distanceRequiredAlert={alert.missedInputs.emptyDistance}\n                        dateRequiredAlert={alert.missedInputs.emptyDate}\n                        timeRequiredAlert={alert.missedInputs.emptyTime}\n                        whenRequiredAlert={alert.missedInputs.emptyWhen}\n                        locationRequiredAlert={alert.missedInputs.emptyLocation}\n                    />\n                );\n            case 1:\n                return (\n                    <MeetingPoint\n                        changeOrganizerName={handleDetailChange('organizerName')}\n                        changeOrganizerPhoneNumber={handleDetailChange('organizerPhoneNumber')}\n                        changeMeetingPoint={handleDetailChange('meetingPoint')}\n                        changeEventDescription={handleDetailChange('eventDescription')}\n                        organizerNameValue={allDetails.organizerName}\n                        organizerPhoneNumberValue={allDetails.organizerPhoneNumber}\n                        meetingPointValue={allDetails.meetingPoint}\n                        eventDescriptionValue={allDetails.eventDescription} />\n                );\n            case 2:\n                return (\n                    <UploudEventImage\n                        onImageUpload={handleDetailChange('image')}\n                        imageValue={allDetails.image}\n                    />\n\n                );\n            default:\n                return 'Unknown step';\n        }\n    }\n\n    const steps = getSteps();\n\n\n    const [createEvent, { loading, error, data }] = useMutation(CREATE_EVENT, {\n        onCompleted: () => {\n            setAlert({ ...alert, eventCreated: true });\n        },\n        onError: (error) => setAlert({ ...alert, internalBackendError: true }),\n    });\n\n\n    function rand() {\n        return Math.round(Math.random() * 20) - 10;\n    }\n\n    function getModalStyle() {\n        const top = 50 + rand();\n        const left = 50 + rand();\n\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n\n    const handleModalNo = () => {\n        setOpenModal(false);\n    }\n\n\n    const handleModalYes = () => {\n        setOpenModal(false);\n        setActiveStep(0);\n    }\n\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n    };\n\n    const [modalStyle] = React.useState(getModalStyle);\n\n    const bodyConfirmPost = (\n        <div style={modalStyle} className={classes.paper}>\n            <Typography>Are you sure you want to reset?</Typography>\n            <div className={classes.confirmButtons}>\n                <Button\n                    onClick={handleModalNo}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    No\n      </Button>\n                <Button\n                    onClick={handleModalYes}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                >\n                    Yes\n      </Button>\n            </div>\n        </div>\n    );\n\n\n    const handleNext = () => {\n        const isValidate = handleValidation();\n        if (isValidate) {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setOpenModal(true);\n    };\n\n    const handleSubmit = () => {\n        createEvent(\n            {\n                variables: {\n                    when: mapOptionsToWhen(allDetails.when),\n                    date: \"2022-12-19T15:28:46.493Z\",\n                    time: '12:15',\n                    location: allDetails.location,\n                    distance: Number(allDetails.distance),\n                    organizerName: allDetails.organizerName,\n                    organizerPhoneNumber: allDetails.organizerPhoneNumber,\n                    meetingPoint: allDetails.meetingPoint,\n                    description: allDetails.eventDescription\n                }\n            }\n        );\n    }\n\n    if (loading) {\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <div>{getStepContent(index)}</div>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                    </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <div className={classes.actionsContainer}>\n                            <Button onClick={handleReset} disabled className={classes.button}>\n                                Reset\n                            </Button>\n                            <SpinnerButton className={classes.button} loading={loading} buttonLabel={'Submit'} onClick={handleSubmit} />\n                        </div>\n                    </Paper>\n                )}\n            </div>\n        )\n    };\n\n    if (!loading) {\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <div>{getStepContent(index)}</div>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                    </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <div className={classes.actionsContainer}>\n                            <Button onClick={handleReset} className={classes.button}>\n                                Reset\n            </Button>\n                            <Button variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleSubmit} className={classes.button}>\n                                Submit\n            </Button>\n                            {\n                                alert.eventCreated ? (\n                                    <Alert severity=\"success\">New event has been created</Alert>\n                                ) : null\n                            }\n                            {\n                                alert.internalBackendError ? (\n                                    <Alert severity=\"error\">Ooops! Something went wrong, try again later.</Alert>\n                                ) : null\n                            }\n                        </div>\n                    </Paper>\n                )}\n                <Modal\n                    open={openModal}\n                    onClose={handleModalClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    {bodyConfirmPost}\n                </Modal>\n            </div>\n        )\n    }\n\n    return (\n        <></>\n    );\n}\n\nexport default CreateEvent;","/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.mutation.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/grapQL/event/event.query.ts",[],"/Users/porczi/forest/reactapp-teamfinder/src/models/when.enum.ts",[],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":2,"column":10,"nodeType":"296","messageId":"297","endLine":2,"endColumn":15},{"ruleId":"294","severity":1,"message":"298","line":1,"column":10,"nodeType":"296","messageId":"297","endLine":1,"endColumn":27},{"ruleId":"294","severity":1,"message":"299","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":29},{"ruleId":"300","severity":1,"message":"301","line":31,"column":8,"nodeType":"302","endLine":31,"endColumn":22,"suggestions":"303"},{"ruleId":"294","severity":1,"message":"304","line":15,"column":8,"nodeType":"296","messageId":"297","endLine":15,"endColumn":25},{"ruleId":"294","severity":1,"message":"305","line":1,"column":53,"nodeType":"296","messageId":"297","endLine":1,"endColumn":62},{"ruleId":"294","severity":1,"message":"306","line":1,"column":64,"nodeType":"296","messageId":"297","endLine":1,"endColumn":75},{"ruleId":"294","severity":1,"message":"307","line":15,"column":10,"nodeType":"296","messageId":"297","endLine":15,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":78,"column":13,"nodeType":"310","messageId":"311","endLine":86,"endColumn":14},{"ruleId":"294","severity":1,"message":"312","line":1,"column":28,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"313","line":14,"column":5,"nodeType":"296","messageId":"297","endLine":14,"endColumn":19},{"ruleId":"294","severity":1,"message":"314","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":23},{"ruleId":"294","severity":1,"message":"315","line":12,"column":10,"nodeType":"296","messageId":"297","endLine":12,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":2,"column":26,"nodeType":"318","messageId":"319","endLine":2,"endColumn":27,"suggestions":"320"},{"ruleId":"316","severity":1,"message":"317","line":2,"column":51,"nodeType":"318","messageId":"319","endLine":2,"endColumn":52,"suggestions":"321"},{"ruleId":"290","replacedBy":"322"},{"ruleId":"292","replacedBy":"323"},{"ruleId":"300","severity":1,"message":"324","line":37,"column":32,"nodeType":"296","endLine":37,"endColumn":39},{"ruleId":"294","severity":1,"message":"325","line":53,"column":30,"nodeType":"296","messageId":"297","endLine":53,"endColumn":37},{"ruleId":"294","severity":1,"message":"326","line":53,"column":39,"nodeType":"296","messageId":"297","endLine":53,"endColumn":44},{"ruleId":"294","severity":1,"message":"327","line":41,"column":19,"nodeType":"296","messageId":"297","endLine":41,"endColumn":28},{"ruleId":"294","severity":1,"message":"328","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"329","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":41},{"ruleId":"294","severity":1,"message":"312","line":1,"column":43,"nodeType":"296","messageId":"297","endLine":1,"endColumn":51},{"ruleId":"294","severity":1,"message":"326","line":176,"column":36,"nodeType":"296","messageId":"297","endLine":176,"endColumn":41},{"ruleId":"294","severity":1,"message":"330","line":176,"column":43,"nodeType":"296","messageId":"297","endLine":176,"endColumn":47},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"@typescript-eslint/no-unused-vars","'IUser' is defined but never used.","Identifier","unusedVar","'NavigationTwoTone' is defined but never used.","'DEFAULT_MAX_VERSION' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchPost'. Either include it or remove the dependency array.","ArrayExpression",["333"],"'AutoCompletePlace' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'mapWhenToOptions' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","'DateTimePicker' is defined but never used.","'validateEmail' is defined but never used.","'waitForDomChange' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["334","335"],["336","337"],["331"],["332"],"The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'locations' is assigned a value but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"messageId":"340","fix":"341","desc":"342"},{"messageId":"343","fix":"344","desc":"345"},{"messageId":"340","fix":"346","desc":"342"},{"messageId":"343","fix":"347","desc":"345"},"Update the dependencies array to be: [searchPhrase, searchPost]",{"range":"348","text":"349"},"removeEscape",{"range":"350","text":"351"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"352","text":"353"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"354","text":"351"},{"range":"355","text":"353"},[1152,1166],"[searchPhrase, searchPost]",[84,85],"",[84,84],"\\",[109,110],[109,109]]